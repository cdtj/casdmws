package com.example.USD_WebServices;




//----------------------------------------------------
//
// Generated by www.easywsdl.com
// Version: 4.1.12.0
//
// Created by Quasar Development at 21/04/2016
//
//---------------------------------------------------




import org.ksoap2.HeaderProperty;
import org.ksoap2.serialization.*;
import org.ksoap2.transport.*;
import org.kxml2.kdom.Element;

import java.lang.reflect.Constructor;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;


public class RIPUSD_WebServiceSoapSoapBinding
{
    interface RIPIWcfMethod
    {
        RIPExtendedSoapSerializationEnvelope CreateSoapEnvelope() throws java.lang.Exception;

        java.lang.Object ProcessResult(RIPExtendedSoapSerializationEnvelope __envelope,java.lang.Object result) throws java.lang.Exception;
    }

    String url="http://sd1.bashneft.ru:8080/axis/services/USD_R11_WebService";

    int timeOut=60000;
    public List< HeaderProperty> httpHeaders;
    public boolean enableLogging;

    RIPIServiceEvents callback;
    public RIPUSD_WebServiceSoapSoapBinding(){}

    public RIPUSD_WebServiceSoapSoapBinding (RIPIServiceEvents callback)
    {
        this.callback = callback;
    }
    public RIPUSD_WebServiceSoapSoapBinding(RIPIServiceEvents callback,String url)
    {
        this.callback = callback;
        this.url = url;
    }

    public RIPUSD_WebServiceSoapSoapBinding(RIPIServiceEvents callback,String url,int timeOut)
    {
        this.callback = callback;
        this.url = url;
        this.timeOut=timeOut;
    }

    protected org.ksoap2.transport.Transport createTransport()
    {
        try
        {
            java.net.URI uri = new java.net.URI(url);
            if(uri.getScheme().equalsIgnoreCase("https"))
            {
                int port=uri.getPort()>0?uri.getPort():443;
                return new HttpsTransportSE(uri.getHost(), port, uri.getPath(), timeOut);
            }
            else
            {
                return new HttpTransportSE(url,timeOut);
            }

        }
        catch (java.net.URISyntaxException e)
        {
        }
        return null;
    }
    
    protected RIPExtendedSoapSerializationEnvelope createEnvelope()
    {
        RIPExtendedSoapSerializationEnvelope envelope= new RIPExtendedSoapSerializationEnvelope(RIPExtendedSoapSerializationEnvelope.VER11);
        return envelope;
    }
    
    protected java.util.List sendRequest(String methodName,RIPExtendedSoapSerializationEnvelope envelope,org.ksoap2.transport.Transport transport  )throws java.lang.Exception
    {
        return transport.call(methodName, envelope, httpHeaders);
    }

    java.lang.Object getResult(java.lang.Class destObj,java.lang.Object source,String resultName,RIPExtendedSoapSerializationEnvelope __envelope) throws java.lang.Exception
    {
        if(source==null)
        {
            return null;
        }
        if(source instanceof SoapPrimitive)
        {
            SoapPrimitive soap =(SoapPrimitive)source;
            if(soap.getName().equals(resultName))
            {
                java.lang.Object instance=__envelope.get(source,destObj);
                return instance;
            }
        }
        else
        {
            SoapObject soap = (SoapObject)source;
            if (soap.hasProperty(resultName))
            {
                java.lang.Object j=soap.getProperty(resultName);
                if(j==null)
                {
                    return null;
                }
                java.lang.Object instance=__envelope.get(j,destObj);
                return instance;
            }
            else if( soap.getName().equals(resultName)) {
                java.lang.Object instance=__envelope.get(source,destObj);
                return instance;
            }
       }

       return null;
    }

        
    public RIPcreateObjectResponse createObject(final Integer sid,final String objectType,final RIPArrayOfString attrVals,final RIPArrayOfString attributes,final String createObjectResult,final String newHandle ) throws java.lang.Exception
    {
        return (RIPcreateObjectResponse)execute(new RIPIWcfMethod()
        {
            @Override
            public RIPExtendedSoapSerializationEnvelope CreateSoapEnvelope(){
              RIPExtendedSoapSerializationEnvelope __envelope = createEnvelope();
                __envelope.addMapping("","attrVals",new RIPArrayOfString().getClass());
                __envelope.addMapping("","attributes",new RIPArrayOfString().getClass());
                SoapObject __soapReq = new SoapObject("http://www.ca.com/UnicenterServicePlus/ServiceDesk", "createObject");
                __envelope.setOutputSoapObject(__soapReq);
                
                PropertyInfo __info=null;
                __info = new PropertyInfo();
                __info.namespace="";
                __info.name="sid";
                __info.type=PropertyInfo.INTEGER_CLASS;
                __info.setValue(sid);
                __soapReq.addProperty(__info);
                __info = new PropertyInfo();
                __info.namespace="";
                __info.name="objectType";
                __info.type=PropertyInfo.STRING_CLASS;
                __info.setValue(objectType);
                __soapReq.addProperty(__info);
                __info = new PropertyInfo();
                __info.namespace="";
                __info.name="attrVals";
                __info.type=PropertyInfo.VECTOR_CLASS;
                __info.setValue(attrVals);
                __soapReq.addProperty(__info);
                __info = new PropertyInfo();
                __info.namespace="";
                __info.name="attributes";
                __info.type=PropertyInfo.VECTOR_CLASS;
                __info.setValue(attributes);
                __soapReq.addProperty(__info);
                __info = new PropertyInfo();
                __info.namespace="";
                __info.name="createObjectResult";
                __info.type=PropertyInfo.STRING_CLASS;
                __info.setValue(createObjectResult);
                __soapReq.addProperty(__info);
                __info = new PropertyInfo();
                __info.namespace="";
                __info.name="newHandle";
                __info.type=PropertyInfo.STRING_CLASS;
                __info.setValue(newHandle);
                __soapReq.addProperty(__info);
                return __envelope;
            }
            
            @Override
            public java.lang.Object ProcessResult(RIPExtendedSoapSerializationEnvelope __envelope,java.lang.Object __result)throws java.lang.Exception {
                return (RIPcreateObjectResponse)getResult(RIPcreateObjectResponse.class,__result,"createObjectResponse",__envelope);
            }
        },"");
    }
    
    public android.os.AsyncTask< Void, Void, RIPOperationResult< RIPcreateObjectResponse>> createObjectAsync(final Integer sid,final String objectType,final RIPArrayOfString attrVals,final RIPArrayOfString attributes,final String createObjectResult,final String newHandle)
    {
        return executeAsync(new RIPFunctions.IFunc< RIPcreateObjectResponse>() {
            public RIPcreateObjectResponse Func() throws java.lang.Exception {
                return createObject( sid,objectType,attrVals,attributes,createObjectResult,newHandle);
            }
        });
    }
    
    public void addAssetLog(final Integer sid,final String assetHandle,final String contactHandle,final String logText ) throws java.lang.Exception
    {
        execute(new RIPIWcfMethod()
        {
            @Override
            public RIPExtendedSoapSerializationEnvelope CreateSoapEnvelope(){
              RIPExtendedSoapSerializationEnvelope __envelope = createEnvelope();
                SoapObject __soapReq = new SoapObject("http://www.ca.com/UnicenterServicePlus/ServiceDesk", "addAssetLog");
                __envelope.setOutputSoapObject(__soapReq);
                
                PropertyInfo __info=null;
                __info = new PropertyInfo();
                __info.namespace="";
                __info.name="sid";
                __info.type=PropertyInfo.INTEGER_CLASS;
                __info.setValue(sid);
                __soapReq.addProperty(__info);
                __info = new PropertyInfo();
                __info.namespace="";
                __info.name="assetHandle";
                __info.type=PropertyInfo.STRING_CLASS;
                __info.setValue(assetHandle);
                __soapReq.addProperty(__info);
                __info = new PropertyInfo();
                __info.namespace="";
                __info.name="contactHandle";
                __info.type=PropertyInfo.STRING_CLASS;
                __info.setValue(contactHandle);
                __soapReq.addProperty(__info);
                __info = new PropertyInfo();
                __info.namespace="";
                __info.name="logText";
                __info.type=PropertyInfo.STRING_CLASS;
                __info.setValue(logText);
                __soapReq.addProperty(__info);
                return __envelope;
            }
            
            @Override
            public java.lang.Object ProcessResult(RIPExtendedSoapSerializationEnvelope __envelope,java.lang.Object __result)throws java.lang.Exception {
                return null;
            }
        },"");
    }
    
    public android.os.AsyncTask< Void, Void, RIPOperationResult< Void>> addAssetLogAsync(final Integer sid,final String assetHandle,final String contactHandle,final String logText)
    {
        return executeAsync(new RIPFunctions.IFunc< Void>()
        {
            @Override
            public Void Func() throws java.lang.Exception {
                addAssetLog( sid,assetHandle,contactHandle,logText);
                return null;
            }
        }) ;
    }
    
    public void createLrelRelationships(final Integer sid,final String contextObject,final String lrelName,final RIPArrayOfString addObjectHandles ) throws java.lang.Exception
    {
        execute(new RIPIWcfMethod()
        {
            @Override
            public RIPExtendedSoapSerializationEnvelope CreateSoapEnvelope(){
              RIPExtendedSoapSerializationEnvelope __envelope = createEnvelope();
                __envelope.addMapping("","addObjectHandles",new RIPArrayOfString().getClass());
                SoapObject __soapReq = new SoapObject("http://www.ca.com/UnicenterServicePlus/ServiceDesk", "createLrelRelationships");
                __envelope.setOutputSoapObject(__soapReq);
                
                PropertyInfo __info=null;
                __info = new PropertyInfo();
                __info.namespace="";
                __info.name="sid";
                __info.type=PropertyInfo.INTEGER_CLASS;
                __info.setValue(sid);
                __soapReq.addProperty(__info);
                __info = new PropertyInfo();
                __info.namespace="";
                __info.name="contextObject";
                __info.type=PropertyInfo.STRING_CLASS;
                __info.setValue(contextObject);
                __soapReq.addProperty(__info);
                __info = new PropertyInfo();
                __info.namespace="";
                __info.name="lrelName";
                __info.type=PropertyInfo.STRING_CLASS;
                __info.setValue(lrelName);
                __soapReq.addProperty(__info);
                __info = new PropertyInfo();
                __info.namespace="";
                __info.name="addObjectHandles";
                __info.type=PropertyInfo.VECTOR_CLASS;
                __info.setValue(addObjectHandles);
                __soapReq.addProperty(__info);
                return __envelope;
            }
            
            @Override
            public java.lang.Object ProcessResult(RIPExtendedSoapSerializationEnvelope __envelope,java.lang.Object __result)throws java.lang.Exception {
                return null;
            }
        },"");
    }
    
    public android.os.AsyncTask< Void, Void, RIPOperationResult< Void>> createLrelRelationshipsAsync(final Integer sid,final String contextObject,final String lrelName,final RIPArrayOfString addObjectHandles)
    {
        return executeAsync(new RIPFunctions.IFunc< Void>()
        {
            @Override
            public Void Func() throws java.lang.Exception {
                createLrelRelationships( sid,contextObject,lrelName,addObjectHandles);
                return null;
            }
        }) ;
    }
    
    public void addMemberToGroup(final Integer sid,final String contactHandle,final String groupHandle ) throws java.lang.Exception
    {
        execute(new RIPIWcfMethod()
        {
            @Override
            public RIPExtendedSoapSerializationEnvelope CreateSoapEnvelope(){
              RIPExtendedSoapSerializationEnvelope __envelope = createEnvelope();
                SoapObject __soapReq = new SoapObject("http://www.ca.com/UnicenterServicePlus/ServiceDesk", "addMemberToGroup");
                __envelope.setOutputSoapObject(__soapReq);
                
                PropertyInfo __info=null;
                __info = new PropertyInfo();
                __info.namespace="";
                __info.name="sid";
                __info.type=PropertyInfo.INTEGER_CLASS;
                __info.setValue(sid);
                __soapReq.addProperty(__info);
                __info = new PropertyInfo();
                __info.namespace="";
                __info.name="contactHandle";
                __info.type=PropertyInfo.STRING_CLASS;
                __info.setValue(contactHandle);
                __soapReq.addProperty(__info);
                __info = new PropertyInfo();
                __info.namespace="";
                __info.name="groupHandle";
                __info.type=PropertyInfo.STRING_CLASS;
                __info.setValue(groupHandle);
                __soapReq.addProperty(__info);
                return __envelope;
            }
            
            @Override
            public java.lang.Object ProcessResult(RIPExtendedSoapSerializationEnvelope __envelope,java.lang.Object __result)throws java.lang.Exception {
                return null;
            }
        },"");
    }
    
    public android.os.AsyncTask< Void, Void, RIPOperationResult< Void>> addMemberToGroupAsync(final Integer sid,final String contactHandle,final String groupHandle)
    {
        return executeAsync(new RIPFunctions.IFunc< Void>()
        {
            @Override
            public Void Func() throws java.lang.Exception {
                addMemberToGroup( sid,contactHandle,groupHandle);
                return null;
            }
        }) ;
    }
    
    public String attachChangeToRequest(final Integer sid,final String creator,final String requestHandle,final String changeHandle,final RIPArrayOfString changeAttrVals,final String description ) throws java.lang.Exception
    {
        return (String)execute(new RIPIWcfMethod()
        {
            @Override
            public RIPExtendedSoapSerializationEnvelope CreateSoapEnvelope(){
              RIPExtendedSoapSerializationEnvelope __envelope = createEnvelope();
                __envelope.addMapping("","changeAttrVals",new RIPArrayOfString().getClass());
                SoapObject __soapReq = new SoapObject("http://www.ca.com/UnicenterServicePlus/ServiceDesk", "attachChangeToRequest");
                __envelope.setOutputSoapObject(__soapReq);
                
                PropertyInfo __info=null;
                __info = new PropertyInfo();
                __info.namespace="";
                __info.name="sid";
                __info.type=PropertyInfo.INTEGER_CLASS;
                __info.setValue(sid);
                __soapReq.addProperty(__info);
                __info = new PropertyInfo();
                __info.namespace="";
                __info.name="creator";
                __info.type=PropertyInfo.STRING_CLASS;
                __info.setValue(creator);
                __soapReq.addProperty(__info);
                __info = new PropertyInfo();
                __info.namespace="";
                __info.name="requestHandle";
                __info.type=PropertyInfo.STRING_CLASS;
                __info.setValue(requestHandle);
                __soapReq.addProperty(__info);
                __info = new PropertyInfo();
                __info.namespace="";
                __info.name="changeHandle";
                __info.type=PropertyInfo.STRING_CLASS;
                __info.setValue(changeHandle);
                __soapReq.addProperty(__info);
                __info = new PropertyInfo();
                __info.namespace="";
                __info.name="changeAttrVals";
                __info.type=PropertyInfo.VECTOR_CLASS;
                __info.setValue(changeAttrVals);
                __soapReq.addProperty(__info);
                __info = new PropertyInfo();
                __info.namespace="";
                __info.name="description";
                __info.type=PropertyInfo.STRING_CLASS;
                __info.setValue(description);
                __soapReq.addProperty(__info);
                return __envelope;
            }
            
            @Override
            public java.lang.Object ProcessResult(RIPExtendedSoapSerializationEnvelope __envelope,java.lang.Object __result)throws java.lang.Exception {
                SoapObject __soap=(SoapObject)__result;
                java.lang.Object obj = __soap.getProperty("attachChangeToRequestReturn");
                if (obj != null && obj.getClass().equals(SoapPrimitive.class))
                {
                    SoapPrimitive j =(SoapPrimitive) obj;
                    return j.toString();
                }
                else if (obj!= null && obj instanceof String){
                    return (String)obj;
                }
                return null;
            }
        },"");
    }
    
    public android.os.AsyncTask< Void, Void, RIPOperationResult< String>> attachChangeToRequestAsync(final Integer sid,final String creator,final String requestHandle,final String changeHandle,final RIPArrayOfString changeAttrVals,final String description)
    {
        return executeAsync(new RIPFunctions.IFunc< String>() {
            public String Func() throws java.lang.Exception {
                return attachChangeToRequest( sid,creator,requestHandle,changeHandle,changeAttrVals,description);
            }
        });
    }
    
    public String callServerMethod(final Integer sid,final String methodName,final String factoryName,final String formatList,final RIPArrayOfString parameters ) throws java.lang.Exception
    {
        return (String)execute(new RIPIWcfMethod()
        {
            @Override
            public RIPExtendedSoapSerializationEnvelope CreateSoapEnvelope(){
              RIPExtendedSoapSerializationEnvelope __envelope = createEnvelope();
                __envelope.addMapping("","parameters",new RIPArrayOfString().getClass());
                SoapObject __soapReq = new SoapObject("http://www.ca.com/UnicenterServicePlus/ServiceDesk", "callServerMethod");
                __envelope.setOutputSoapObject(__soapReq);
                
                PropertyInfo __info=null;
                __info = new PropertyInfo();
                __info.namespace="";
                __info.name="sid";
                __info.type=PropertyInfo.INTEGER_CLASS;
                __info.setValue(sid);
                __soapReq.addProperty(__info);
                __info = new PropertyInfo();
                __info.namespace="";
                __info.name="methodName";
                __info.type=PropertyInfo.STRING_CLASS;
                __info.setValue(methodName);
                __soapReq.addProperty(__info);
                __info = new PropertyInfo();
                __info.namespace="";
                __info.name="factoryName";
                __info.type=PropertyInfo.STRING_CLASS;
                __info.setValue(factoryName);
                __soapReq.addProperty(__info);
                __info = new PropertyInfo();
                __info.namespace="";
                __info.name="formatList";
                __info.type=PropertyInfo.STRING_CLASS;
                __info.setValue(formatList);
                __soapReq.addProperty(__info);
                __info = new PropertyInfo();
                __info.namespace="";
                __info.name="parameters";
                __info.type=PropertyInfo.VECTOR_CLASS;
                __info.setValue(parameters);
                __soapReq.addProperty(__info);
                return __envelope;
            }
            
            @Override
            public java.lang.Object ProcessResult(RIPExtendedSoapSerializationEnvelope __envelope,java.lang.Object __result)throws java.lang.Exception {
                SoapObject __soap=(SoapObject)__result;
                java.lang.Object obj = __soap.getProperty("callServerMethodReturn");
                if (obj != null && obj.getClass().equals(SoapPrimitive.class))
                {
                    SoapPrimitive j =(SoapPrimitive) obj;
                    return j.toString();
                }
                else if (obj!= null && obj instanceof String){
                    return (String)obj;
                }
                return null;
            }
        },"");
    }
    
    public android.os.AsyncTask< Void, Void, RIPOperationResult< String>> callServerMethodAsync(final Integer sid,final String methodName,final String factoryName,final String formatList,final RIPArrayOfString parameters)
    {
        return executeAsync(new RIPFunctions.IFunc< String>() {
            public String Func() throws java.lang.Exception {
                return callServerMethod( sid,methodName,factoryName,formatList,parameters);
            }
        });
    }
    
    public String changeStatus(final Integer sid,final String creator,final String objectHandle,final String description,final String newStatusHandle ) throws java.lang.Exception
    {
        return (String)execute(new RIPIWcfMethod()
        {
            @Override
            public RIPExtendedSoapSerializationEnvelope CreateSoapEnvelope(){
              RIPExtendedSoapSerializationEnvelope __envelope = createEnvelope();
                SoapObject __soapReq = new SoapObject("http://www.ca.com/UnicenterServicePlus/ServiceDesk", "changeStatus");
                __envelope.setOutputSoapObject(__soapReq);
                
                PropertyInfo __info=null;
                __info = new PropertyInfo();
                __info.namespace="";
                __info.name="sid";
                __info.type=PropertyInfo.INTEGER_CLASS;
                __info.setValue(sid);
                __soapReq.addProperty(__info);
                __info = new PropertyInfo();
                __info.namespace="";
                __info.name="creator";
                __info.type=PropertyInfo.STRING_CLASS;
                __info.setValue(creator);
                __soapReq.addProperty(__info);
                __info = new PropertyInfo();
                __info.namespace="";
                __info.name="objectHandle";
                __info.type=PropertyInfo.STRING_CLASS;
                __info.setValue(objectHandle);
                __soapReq.addProperty(__info);
                __info = new PropertyInfo();
                __info.namespace="";
                __info.name="description";
                __info.type=PropertyInfo.STRING_CLASS;
                __info.setValue(description);
                __soapReq.addProperty(__info);
                __info = new PropertyInfo();
                __info.namespace="";
                __info.name="newStatusHandle";
                __info.type=PropertyInfo.STRING_CLASS;
                __info.setValue(newStatusHandle);
                __soapReq.addProperty(__info);
                return __envelope;
            }
            
            @Override
            public java.lang.Object ProcessResult(RIPExtendedSoapSerializationEnvelope __envelope,java.lang.Object __result)throws java.lang.Exception {
                SoapObject __soap=(SoapObject)__result;
                java.lang.Object obj = __soap.getProperty("changeStatusReturn");
                if (obj != null && obj.getClass().equals(SoapPrimitive.class))
                {
                    SoapPrimitive j =(SoapPrimitive) obj;
                    return j.toString();
                }
                else if (obj!= null && obj instanceof String){
                    return (String)obj;
                }
                return null;
            }
        },"");
    }
    
    public android.os.AsyncTask< Void, Void, RIPOperationResult< String>> changeStatusAsync(final Integer sid,final String creator,final String objectHandle,final String description,final String newStatusHandle)
    {
        return executeAsync(new RIPFunctions.IFunc< String>() {
            public String Func() throws java.lang.Exception {
                return changeStatus( sid,creator,objectHandle,description,newStatusHandle);
            }
        });
    }
    
    public Integer clearNotification(final Integer sid,final String lrObject,final String clearBy ) throws java.lang.Exception
    {
        return (Integer)execute(new RIPIWcfMethod()
        {
            @Override
            public RIPExtendedSoapSerializationEnvelope CreateSoapEnvelope(){
              RIPExtendedSoapSerializationEnvelope __envelope = createEnvelope();
                SoapObject __soapReq = new SoapObject("http://www.ca.com/UnicenterServicePlus/ServiceDesk", "clearNotification");
                __envelope.setOutputSoapObject(__soapReq);
                
                PropertyInfo __info=null;
                __info = new PropertyInfo();
                __info.namespace="";
                __info.name="sid";
                __info.type=PropertyInfo.INTEGER_CLASS;
                __info.setValue(sid);
                __soapReq.addProperty(__info);
                __info = new PropertyInfo();
                __info.namespace="";
                __info.name="lrObject";
                __info.type=PropertyInfo.STRING_CLASS;
                __info.setValue(lrObject);
                __soapReq.addProperty(__info);
                __info = new PropertyInfo();
                __info.namespace="";
                __info.name="clearBy";
                __info.type=PropertyInfo.STRING_CLASS;
                __info.setValue(clearBy);
                __soapReq.addProperty(__info);
                return __envelope;
            }
            
            @Override
            public java.lang.Object ProcessResult(RIPExtendedSoapSerializationEnvelope __envelope,java.lang.Object __result)throws java.lang.Exception {
                SoapObject __soap=(SoapObject)__result;
                java.lang.Object obj = __soap.getProperty("clearNotificationReturn");
                if (obj != null && obj.getClass().equals(SoapPrimitive.class))
                {
                    SoapPrimitive j =(SoapPrimitive) obj;
                    return Integer.parseInt(j.toString());
                }
                else if (obj!= null && obj instanceof Integer){
                    return (Integer)obj;
                }
                return null;
            }
        },"");
    }
    
    public android.os.AsyncTask< Void, Void, RIPOperationResult< Integer>> clearNotificationAsync(final Integer sid,final String lrObject,final String clearBy)
    {
        return executeAsync(new RIPFunctions.IFunc< Integer>() {
            public Integer Func() throws java.lang.Exception {
                return clearNotification( sid,lrObject,clearBy);
            }
        });
    }
    
    public String createActivityLog(final Integer sid,final String creator,final String objectHandle,final String description,final String logType,final Integer timeSpent,final Boolean _internal ) throws java.lang.Exception
    {
        return (String)execute(new RIPIWcfMethod()
        {
            @Override
            public RIPExtendedSoapSerializationEnvelope CreateSoapEnvelope(){
              RIPExtendedSoapSerializationEnvelope __envelope = createEnvelope();
                SoapObject __soapReq = new SoapObject("http://www.ca.com/UnicenterServicePlus/ServiceDesk", "createActivityLog");
                __envelope.setOutputSoapObject(__soapReq);
                
                PropertyInfo __info=null;
                __info = new PropertyInfo();
                __info.namespace="";
                __info.name="sid";
                __info.type=PropertyInfo.INTEGER_CLASS;
                __info.setValue(sid);
                __soapReq.addProperty(__info);
                __info = new PropertyInfo();
                __info.namespace="";
                __info.name="creator";
                __info.type=PropertyInfo.STRING_CLASS;
                __info.setValue(creator);
                __soapReq.addProperty(__info);
                __info = new PropertyInfo();
                __info.namespace="";
                __info.name="objectHandle";
                __info.type=PropertyInfo.STRING_CLASS;
                __info.setValue(objectHandle);
                __soapReq.addProperty(__info);
                __info = new PropertyInfo();
                __info.namespace="";
                __info.name="description";
                __info.type=PropertyInfo.STRING_CLASS;
                __info.setValue(description);
                __soapReq.addProperty(__info);
                __info = new PropertyInfo();
                __info.namespace="";
                __info.name="logType";
                __info.type=PropertyInfo.STRING_CLASS;
                __info.setValue(logType);
                __soapReq.addProperty(__info);
                __info = new PropertyInfo();
                __info.namespace="";
                __info.name="timeSpent";
                __info.type=PropertyInfo.INTEGER_CLASS;
                __info.setValue(timeSpent);
                __soapReq.addProperty(__info);
                __info = new PropertyInfo();
                __info.namespace="";
                __info.name="internal";
                __info.type=PropertyInfo.BOOLEAN_CLASS;
                __info.setValue(_internal);
                __soapReq.addProperty(__info);
                return __envelope;
            }
            
            @Override
            public java.lang.Object ProcessResult(RIPExtendedSoapSerializationEnvelope __envelope,java.lang.Object __result)throws java.lang.Exception {
                SoapObject __soap=(SoapObject)__result;
                java.lang.Object obj = __soap.getProperty("createActivityLogReturn");
                if (obj != null && obj.getClass().equals(SoapPrimitive.class))
                {
                    SoapPrimitive j =(SoapPrimitive) obj;
                    return j.toString();
                }
                else if (obj!= null && obj instanceof String){
                    return (String)obj;
                }
                return null;
            }
        },"");
    }
    
    public android.os.AsyncTask< Void, Void, RIPOperationResult< String>> createActivityLogAsync(final Integer sid,final String creator,final String objectHandle,final String description,final String logType,final Integer timeSpent,final Boolean _internal)
    {
        return executeAsync(new RIPFunctions.IFunc< String>() {
            public String Func() throws java.lang.Exception {
                return createActivityLog( sid,creator,objectHandle,description,logType,timeSpent,_internal);
            }
        });
    }
    
    public RIPcreateAssetResponse createAsset(final Integer sid,final RIPArrayOfString attrVals,final RIPArrayOfString attributes,final String createAssetResult,final String newAssetHandle,final String newExtensionHandle,final String newExtensionName ) throws java.lang.Exception
    {
        return (RIPcreateAssetResponse)execute(new RIPIWcfMethod()
        {
            @Override
            public RIPExtendedSoapSerializationEnvelope CreateSoapEnvelope(){
              RIPExtendedSoapSerializationEnvelope __envelope = createEnvelope();
                __envelope.addMapping("","attrVals",new RIPArrayOfString().getClass());
                __envelope.addMapping("","attributes",new RIPArrayOfString().getClass());
                SoapObject __soapReq = new SoapObject("http://www.ca.com/UnicenterServicePlus/ServiceDesk", "createAsset");
                __envelope.setOutputSoapObject(__soapReq);
                
                PropertyInfo __info=null;
                __info = new PropertyInfo();
                __info.namespace="";
                __info.name="sid";
                __info.type=PropertyInfo.INTEGER_CLASS;
                __info.setValue(sid);
                __soapReq.addProperty(__info);
                __info = new PropertyInfo();
                __info.namespace="";
                __info.name="attrVals";
                __info.type=PropertyInfo.VECTOR_CLASS;
                __info.setValue(attrVals);
                __soapReq.addProperty(__info);
                __info = new PropertyInfo();
                __info.namespace="";
                __info.name="attributes";
                __info.type=PropertyInfo.VECTOR_CLASS;
                __info.setValue(attributes);
                __soapReq.addProperty(__info);
                __info = new PropertyInfo();
                __info.namespace="";
                __info.name="createAssetResult";
                __info.type=PropertyInfo.STRING_CLASS;
                __info.setValue(createAssetResult);
                __soapReq.addProperty(__info);
                __info = new PropertyInfo();
                __info.namespace="";
                __info.name="newAssetHandle";
                __info.type=PropertyInfo.STRING_CLASS;
                __info.setValue(newAssetHandle);
                __soapReq.addProperty(__info);
                __info = new PropertyInfo();
                __info.namespace="";
                __info.name="newExtensionHandle";
                __info.type=PropertyInfo.STRING_CLASS;
                __info.setValue(newExtensionHandle);
                __soapReq.addProperty(__info);
                __info = new PropertyInfo();
                __info.namespace="";
                __info.name="newExtensionName";
                __info.type=PropertyInfo.STRING_CLASS;
                __info.setValue(newExtensionName);
                __soapReq.addProperty(__info);
                return __envelope;
            }
            
            @Override
            public java.lang.Object ProcessResult(RIPExtendedSoapSerializationEnvelope __envelope,java.lang.Object __result)throws java.lang.Exception {
                return (RIPcreateAssetResponse)getResult(RIPcreateAssetResponse.class,__result,"createAssetResponse",__envelope);
            }
        },"");
    }
    
    public android.os.AsyncTask< Void, Void, RIPOperationResult< RIPcreateAssetResponse>> createAssetAsync(final Integer sid,final RIPArrayOfString attrVals,final RIPArrayOfString attributes,final String createAssetResult,final String newAssetHandle,final String newExtensionHandle,final String newExtensionName)
    {
        return executeAsync(new RIPFunctions.IFunc< RIPcreateAssetResponse>() {
            public RIPcreateAssetResponse Func() throws java.lang.Exception {
                return createAsset( sid,attrVals,attributes,createAssetResult,newAssetHandle,newExtensionHandle,newExtensionName);
            }
        });
    }
    
    public String createAssetParentChildRelationship(final Integer sid,final String parentHandle,final String childHandle ) throws java.lang.Exception
    {
        return (String)execute(new RIPIWcfMethod()
        {
            @Override
            public RIPExtendedSoapSerializationEnvelope CreateSoapEnvelope(){
              RIPExtendedSoapSerializationEnvelope __envelope = createEnvelope();
                SoapObject __soapReq = new SoapObject("http://www.ca.com/UnicenterServicePlus/ServiceDesk", "createAssetParentChildRelationship");
                __envelope.setOutputSoapObject(__soapReq);
                
                PropertyInfo __info=null;
                __info = new PropertyInfo();
                __info.namespace="";
                __info.name="sid";
                __info.type=PropertyInfo.INTEGER_CLASS;
                __info.setValue(sid);
                __soapReq.addProperty(__info);
                __info = new PropertyInfo();
                __info.namespace="";
                __info.name="parentHandle";
                __info.type=PropertyInfo.STRING_CLASS;
                __info.setValue(parentHandle);
                __soapReq.addProperty(__info);
                __info = new PropertyInfo();
                __info.namespace="";
                __info.name="childHandle";
                __info.type=PropertyInfo.STRING_CLASS;
                __info.setValue(childHandle);
                __soapReq.addProperty(__info);
                return __envelope;
            }
            
            @Override
            public java.lang.Object ProcessResult(RIPExtendedSoapSerializationEnvelope __envelope,java.lang.Object __result)throws java.lang.Exception {
                SoapObject __soap=(SoapObject)__result;
                java.lang.Object obj = __soap.getProperty("createAssetParentChildRelationshipReturn");
                if (obj != null && obj.getClass().equals(SoapPrimitive.class))
                {
                    SoapPrimitive j =(SoapPrimitive) obj;
                    return j.toString();
                }
                else if (obj!= null && obj instanceof String){
                    return (String)obj;
                }
                return null;
            }
        },"");
    }
    
    public android.os.AsyncTask< Void, Void, RIPOperationResult< String>> createAssetParentChildRelationshipAsync(final Integer sid,final String parentHandle,final String childHandle)
    {
        return executeAsync(new RIPFunctions.IFunc< String>() {
            public String Func() throws java.lang.Exception {
                return createAssetParentChildRelationship( sid,parentHandle,childHandle);
            }
        });
    }
    
    public String createAttachment(final Integer sid,final String repositoryHandle,final String objectHandle,final String description,final String fileName ) throws java.lang.Exception
    {
        return (String)execute(new RIPIWcfMethod()
        {
            @Override
            public RIPExtendedSoapSerializationEnvelope CreateSoapEnvelope(){
              RIPExtendedSoapSerializationEnvelope __envelope = createEnvelope();
                SoapObject __soapReq = new SoapObject("http://www.ca.com/UnicenterServicePlus/ServiceDesk", "createAttachment");
                __envelope.setOutputSoapObject(__soapReq);
                
                PropertyInfo __info=null;
                __info = new PropertyInfo();
                __info.namespace="";
                __info.name="sid";
                __info.type=PropertyInfo.INTEGER_CLASS;
                __info.setValue(sid);
                __soapReq.addProperty(__info);
                __info = new PropertyInfo();
                __info.namespace="";
                __info.name="repositoryHandle";
                __info.type=PropertyInfo.STRING_CLASS;
                __info.setValue(repositoryHandle);
                __soapReq.addProperty(__info);
                __info = new PropertyInfo();
                __info.namespace="";
                __info.name="objectHandle";
                __info.type=PropertyInfo.STRING_CLASS;
                __info.setValue(objectHandle);
                __soapReq.addProperty(__info);
                __info = new PropertyInfo();
                __info.namespace="";
                __info.name="description";
                __info.type=PropertyInfo.STRING_CLASS;
                __info.setValue(description);
                __soapReq.addProperty(__info);
                __info = new PropertyInfo();
                __info.namespace="";
                __info.name="fileName";
                __info.type=PropertyInfo.STRING_CLASS;
                __info.setValue(fileName);
                __soapReq.addProperty(__info);
                return __envelope;
            }
            
            @Override
            public java.lang.Object ProcessResult(RIPExtendedSoapSerializationEnvelope __envelope,java.lang.Object __result)throws java.lang.Exception {
                SoapObject __soap=(SoapObject)__result;
                java.lang.Object obj = __soap.getProperty("createAttachmentReturn");
                if (obj != null && obj.getClass().equals(SoapPrimitive.class))
                {
                    SoapPrimitive j =(SoapPrimitive) obj;
                    return j.toString();
                }
                else if (obj!= null && obj instanceof String){
                    return (String)obj;
                }
                return null;
            }
        },"");
    }
    
    public android.os.AsyncTask< Void, Void, RIPOperationResult< String>> createAttachmentAsync(final Integer sid,final String repositoryHandle,final String objectHandle,final String description,final String fileName)
    {
        return executeAsync(new RIPFunctions.IFunc< String>() {
            public String Func() throws java.lang.Exception {
                return createAttachment( sid,repositoryHandle,objectHandle,description,fileName);
            }
        });
    }
    
    public Integer removeAttachment(final Integer sid,final String attHandle ) throws java.lang.Exception
    {
        return (Integer)execute(new RIPIWcfMethod()
        {
            @Override
            public RIPExtendedSoapSerializationEnvelope CreateSoapEnvelope(){
              RIPExtendedSoapSerializationEnvelope __envelope = createEnvelope();
                SoapObject __soapReq = new SoapObject("http://www.ca.com/UnicenterServicePlus/ServiceDesk", "removeAttachment");
                __envelope.setOutputSoapObject(__soapReq);
                
                PropertyInfo __info=null;
                __info = new PropertyInfo();
                __info.namespace="";
                __info.name="sid";
                __info.type=PropertyInfo.INTEGER_CLASS;
                __info.setValue(sid);
                __soapReq.addProperty(__info);
                __info = new PropertyInfo();
                __info.namespace="";
                __info.name="attHandle";
                __info.type=PropertyInfo.STRING_CLASS;
                __info.setValue(attHandle);
                __soapReq.addProperty(__info);
                return __envelope;
            }
            
            @Override
            public java.lang.Object ProcessResult(RIPExtendedSoapSerializationEnvelope __envelope,java.lang.Object __result)throws java.lang.Exception {
                SoapObject __soap=(SoapObject)__result;
                java.lang.Object obj = __soap.getProperty("removeAttachmentReturn");
                if (obj != null && obj.getClass().equals(SoapPrimitive.class))
                {
                    SoapPrimitive j =(SoapPrimitive) obj;
                    return Integer.parseInt(j.toString());
                }
                else if (obj!= null && obj instanceof Integer){
                    return (Integer)obj;
                }
                return null;
            }
        },"");
    }
    
    public android.os.AsyncTask< Void, Void, RIPOperationResult< Integer>> removeAttachmentAsync(final Integer sid,final String attHandle)
    {
        return executeAsync(new RIPFunctions.IFunc< Integer>() {
            public Integer Func() throws java.lang.Exception {
                return removeAttachment( sid,attHandle);
            }
        });
    }
    
    public RIPcreateChangeOrderResponse createChangeOrder(final Integer sid,final String creatorHandle,final RIPArrayOfString attrVals,final RIPArrayOfString propertyValues,final String template,final RIPArrayOfString attributes,final String newChangeHandle,final String newChangeNumber ) throws java.lang.Exception
    {
        return (RIPcreateChangeOrderResponse)execute(new RIPIWcfMethod()
        {
            @Override
            public RIPExtendedSoapSerializationEnvelope CreateSoapEnvelope(){
              RIPExtendedSoapSerializationEnvelope __envelope = createEnvelope();
                __envelope.addMapping("","attrVals",new RIPArrayOfString().getClass());
                __envelope.addMapping("","propertyValues",new RIPArrayOfString().getClass());
                __envelope.addMapping("","attributes",new RIPArrayOfString().getClass());
                SoapObject __soapReq = new SoapObject("http://www.ca.com/UnicenterServicePlus/ServiceDesk", "createChangeOrder");
                __envelope.setOutputSoapObject(__soapReq);
                
                PropertyInfo __info=null;
                __info = new PropertyInfo();
                __info.namespace="";
                __info.name="sid";
                __info.type=PropertyInfo.INTEGER_CLASS;
                __info.setValue(sid);
                __soapReq.addProperty(__info);
                __info = new PropertyInfo();
                __info.namespace="";
                __info.name="creatorHandle";
                __info.type=PropertyInfo.STRING_CLASS;
                __info.setValue(creatorHandle);
                __soapReq.addProperty(__info);
                __info = new PropertyInfo();
                __info.namespace="";
                __info.name="attrVals";
                __info.type=PropertyInfo.VECTOR_CLASS;
                __info.setValue(attrVals);
                __soapReq.addProperty(__info);
                __info = new PropertyInfo();
                __info.namespace="";
                __info.name="propertyValues";
                __info.type=PropertyInfo.VECTOR_CLASS;
                __info.setValue(propertyValues);
                __soapReq.addProperty(__info);
                __info = new PropertyInfo();
                __info.namespace="";
                __info.name="template";
                __info.type=PropertyInfo.STRING_CLASS;
                __info.setValue(template);
                __soapReq.addProperty(__info);
                __info = new PropertyInfo();
                __info.namespace="";
                __info.name="attributes";
                __info.type=PropertyInfo.VECTOR_CLASS;
                __info.setValue(attributes);
                __soapReq.addProperty(__info);
                __info = new PropertyInfo();
                __info.namespace="";
                __info.name="newChangeHandle";
                __info.type=PropertyInfo.STRING_CLASS;
                __info.setValue(newChangeHandle);
                __soapReq.addProperty(__info);
                __info = new PropertyInfo();
                __info.namespace="";
                __info.name="newChangeNumber";
                __info.type=PropertyInfo.STRING_CLASS;
                __info.setValue(newChangeNumber);
                __soapReq.addProperty(__info);
                return __envelope;
            }
            
            @Override
            public java.lang.Object ProcessResult(RIPExtendedSoapSerializationEnvelope __envelope,java.lang.Object __result)throws java.lang.Exception {
                return (RIPcreateChangeOrderResponse)getResult(RIPcreateChangeOrderResponse.class,__result,"createChangeOrderResponse",__envelope);
            }
        },"");
    }
    
    public android.os.AsyncTask< Void, Void, RIPOperationResult< RIPcreateChangeOrderResponse>> createChangeOrderAsync(final Integer sid,final String creatorHandle,final RIPArrayOfString attrVals,final RIPArrayOfString propertyValues,final String template,final RIPArrayOfString attributes,final String newChangeHandle,final String newChangeNumber)
    {
        return executeAsync(new RIPFunctions.IFunc< RIPcreateChangeOrderResponse>() {
            public RIPcreateChangeOrderResponse Func() throws java.lang.Exception {
                return createChangeOrder( sid,creatorHandle,attrVals,propertyValues,template,attributes,newChangeHandle,newChangeNumber);
            }
        });
    }
    
    public RIPcreateIssueResponse createIssue(final Integer sid,final String creatorHandle,final RIPArrayOfString attrVals,final RIPArrayOfString propertyValues,final String template,final RIPArrayOfString attributes,final String newIssueHandle,final String newIssueNumber ) throws java.lang.Exception
    {
        return (RIPcreateIssueResponse)execute(new RIPIWcfMethod()
        {
            @Override
            public RIPExtendedSoapSerializationEnvelope CreateSoapEnvelope(){
              RIPExtendedSoapSerializationEnvelope __envelope = createEnvelope();
                __envelope.addMapping("","attrVals",new RIPArrayOfString().getClass());
                __envelope.addMapping("","propertyValues",new RIPArrayOfString().getClass());
                __envelope.addMapping("","attributes",new RIPArrayOfString().getClass());
                SoapObject __soapReq = new SoapObject("http://www.ca.com/UnicenterServicePlus/ServiceDesk", "createIssue");
                __envelope.setOutputSoapObject(__soapReq);
                
                PropertyInfo __info=null;
                __info = new PropertyInfo();
                __info.namespace="";
                __info.name="sid";
                __info.type=PropertyInfo.INTEGER_CLASS;
                __info.setValue(sid);
                __soapReq.addProperty(__info);
                __info = new PropertyInfo();
                __info.namespace="";
                __info.name="creatorHandle";
                __info.type=PropertyInfo.STRING_CLASS;
                __info.setValue(creatorHandle);
                __soapReq.addProperty(__info);
                __info = new PropertyInfo();
                __info.namespace="";
                __info.name="attrVals";
                __info.type=PropertyInfo.VECTOR_CLASS;
                __info.setValue(attrVals);
                __soapReq.addProperty(__info);
                __info = new PropertyInfo();
                __info.namespace="";
                __info.name="propertyValues";
                __info.type=PropertyInfo.VECTOR_CLASS;
                __info.setValue(propertyValues);
                __soapReq.addProperty(__info);
                __info = new PropertyInfo();
                __info.namespace="";
                __info.name="template";
                __info.type=PropertyInfo.STRING_CLASS;
                __info.setValue(template);
                __soapReq.addProperty(__info);
                __info = new PropertyInfo();
                __info.namespace="";
                __info.name="attributes";
                __info.type=PropertyInfo.VECTOR_CLASS;
                __info.setValue(attributes);
                __soapReq.addProperty(__info);
                __info = new PropertyInfo();
                __info.namespace="";
                __info.name="newIssueHandle";
                __info.type=PropertyInfo.STRING_CLASS;
                __info.setValue(newIssueHandle);
                __soapReq.addProperty(__info);
                __info = new PropertyInfo();
                __info.namespace="";
                __info.name="newIssueNumber";
                __info.type=PropertyInfo.STRING_CLASS;
                __info.setValue(newIssueNumber);
                __soapReq.addProperty(__info);
                return __envelope;
            }
            
            @Override
            public java.lang.Object ProcessResult(RIPExtendedSoapSerializationEnvelope __envelope,java.lang.Object __result)throws java.lang.Exception {
                return (RIPcreateIssueResponse)getResult(RIPcreateIssueResponse.class,__result,"createIssueResponse",__envelope);
            }
        },"");
    }
    
    public android.os.AsyncTask< Void, Void, RIPOperationResult< RIPcreateIssueResponse>> createIssueAsync(final Integer sid,final String creatorHandle,final RIPArrayOfString attrVals,final RIPArrayOfString propertyValues,final String template,final RIPArrayOfString attributes,final String newIssueHandle,final String newIssueNumber)
    {
        return executeAsync(new RIPFunctions.IFunc< RIPcreateIssueResponse>() {
            public RIPcreateIssueResponse Func() throws java.lang.Exception {
                return createIssue( sid,creatorHandle,attrVals,propertyValues,template,attributes,newIssueHandle,newIssueNumber);
            }
        });
    }
    
    public RIPcreateWorkFlowTaskResponse createWorkFlowTask(final Integer sid,final RIPArrayOfString attrVals,final String objectHandle,final String creatorHandle,final String selectedWorkFlow,final String taskType,final RIPArrayOfString attributes,final String createWorkFlowTaskResult,final String newHandle ) throws java.lang.Exception
    {
        return (RIPcreateWorkFlowTaskResponse)execute(new RIPIWcfMethod()
        {
            @Override
            public RIPExtendedSoapSerializationEnvelope CreateSoapEnvelope(){
              RIPExtendedSoapSerializationEnvelope __envelope = createEnvelope();
                __envelope.addMapping("","attrVals",new RIPArrayOfString().getClass());
                __envelope.addMapping("","attributes",new RIPArrayOfString().getClass());
                SoapObject __soapReq = new SoapObject("http://www.ca.com/UnicenterServicePlus/ServiceDesk", "createWorkFlowTask");
                __envelope.setOutputSoapObject(__soapReq);
                
                PropertyInfo __info=null;
                __info = new PropertyInfo();
                __info.namespace="";
                __info.name="sid";
                __info.type=PropertyInfo.INTEGER_CLASS;
                __info.setValue(sid);
                __soapReq.addProperty(__info);
                __info = new PropertyInfo();
                __info.namespace="";
                __info.name="attrVals";
                __info.type=PropertyInfo.VECTOR_CLASS;
                __info.setValue(attrVals);
                __soapReq.addProperty(__info);
                __info = new PropertyInfo();
                __info.namespace="";
                __info.name="objectHandle";
                __info.type=PropertyInfo.STRING_CLASS;
                __info.setValue(objectHandle);
                __soapReq.addProperty(__info);
                __info = new PropertyInfo();
                __info.namespace="";
                __info.name="creatorHandle";
                __info.type=PropertyInfo.STRING_CLASS;
                __info.setValue(creatorHandle);
                __soapReq.addProperty(__info);
                __info = new PropertyInfo();
                __info.namespace="";
                __info.name="selectedWorkFlow";
                __info.type=PropertyInfo.STRING_CLASS;
                __info.setValue(selectedWorkFlow);
                __soapReq.addProperty(__info);
                __info = new PropertyInfo();
                __info.namespace="";
                __info.name="taskType";
                __info.type=PropertyInfo.STRING_CLASS;
                __info.setValue(taskType);
                __soapReq.addProperty(__info);
                __info = new PropertyInfo();
                __info.namespace="";
                __info.name="attributes";
                __info.type=PropertyInfo.VECTOR_CLASS;
                __info.setValue(attributes);
                __soapReq.addProperty(__info);
                __info = new PropertyInfo();
                __info.namespace="";
                __info.name="createWorkFlowTaskResult";
                __info.type=PropertyInfo.STRING_CLASS;
                __info.setValue(createWorkFlowTaskResult);
                __soapReq.addProperty(__info);
                __info = new PropertyInfo();
                __info.namespace="";
                __info.name="newHandle";
                __info.type=PropertyInfo.STRING_CLASS;
                __info.setValue(newHandle);
                __soapReq.addProperty(__info);
                return __envelope;
            }
            
            @Override
            public java.lang.Object ProcessResult(RIPExtendedSoapSerializationEnvelope __envelope,java.lang.Object __result)throws java.lang.Exception {
                return (RIPcreateWorkFlowTaskResponse)getResult(RIPcreateWorkFlowTaskResponse.class,__result,"createWorkFlowTaskResponse",__envelope);
            }
        },"");
    }
    
    public android.os.AsyncTask< Void, Void, RIPOperationResult< RIPcreateWorkFlowTaskResponse>> createWorkFlowTaskAsync(final Integer sid,final RIPArrayOfString attrVals,final String objectHandle,final String creatorHandle,final String selectedWorkFlow,final String taskType,final RIPArrayOfString attributes,final String createWorkFlowTaskResult,final String newHandle)
    {
        return executeAsync(new RIPFunctions.IFunc< RIPcreateWorkFlowTaskResponse>() {
            public RIPcreateWorkFlowTaskResponse Func() throws java.lang.Exception {
                return createWorkFlowTask( sid,attrVals,objectHandle,creatorHandle,selectedWorkFlow,taskType,attributes,createWorkFlowTaskResult,newHandle);
            }
        });
    }
    
    public void deleteWorkFlowTask(final Integer sid,final String workFlowHandle,final String objectHandle ) throws java.lang.Exception
    {
        execute(new RIPIWcfMethod()
        {
            @Override
            public RIPExtendedSoapSerializationEnvelope CreateSoapEnvelope(){
              RIPExtendedSoapSerializationEnvelope __envelope = createEnvelope();
                SoapObject __soapReq = new SoapObject("http://www.ca.com/UnicenterServicePlus/ServiceDesk", "deleteWorkFlowTask");
                __envelope.setOutputSoapObject(__soapReq);
                
                PropertyInfo __info=null;
                __info = new PropertyInfo();
                __info.namespace="";
                __info.name="sid";
                __info.type=PropertyInfo.INTEGER_CLASS;
                __info.setValue(sid);
                __soapReq.addProperty(__info);
                __info = new PropertyInfo();
                __info.namespace="";
                __info.name="workFlowHandle";
                __info.type=PropertyInfo.STRING_CLASS;
                __info.setValue(workFlowHandle);
                __soapReq.addProperty(__info);
                __info = new PropertyInfo();
                __info.namespace="";
                __info.name="objectHandle";
                __info.type=PropertyInfo.STRING_CLASS;
                __info.setValue(objectHandle);
                __soapReq.addProperty(__info);
                return __envelope;
            }
            
            @Override
            public java.lang.Object ProcessResult(RIPExtendedSoapSerializationEnvelope __envelope,java.lang.Object __result)throws java.lang.Exception {
                return null;
            }
        },"");
    }
    
    public android.os.AsyncTask< Void, Void, RIPOperationResult< Void>> deleteWorkFlowTaskAsync(final Integer sid,final String workFlowHandle,final String objectHandle)
    {
        return executeAsync(new RIPFunctions.IFunc< Void>()
        {
            @Override
            public Void Func() throws java.lang.Exception {
                deleteWorkFlowTask( sid,workFlowHandle,objectHandle);
                return null;
            }
        }) ;
    }
    
    public RIPcreateRequestResponse createRequest(final Integer sid,final String creatorHandle,final RIPArrayOfString attrVals,final RIPArrayOfString propertyValues,final String template,final RIPArrayOfString attributes,final String newRequestHandle,final String newRequestNumber ) throws java.lang.Exception
    {
        return (RIPcreateRequestResponse)execute(new RIPIWcfMethod()
        {
            @Override
            public RIPExtendedSoapSerializationEnvelope CreateSoapEnvelope(){
              RIPExtendedSoapSerializationEnvelope __envelope = createEnvelope();
                __envelope.addMapping("","attrVals",new RIPArrayOfString().getClass());
                __envelope.addMapping("","propertyValues",new RIPArrayOfString().getClass());
                __envelope.addMapping("","attributes",new RIPArrayOfString().getClass());
                SoapObject __soapReq = new SoapObject("http://www.ca.com/UnicenterServicePlus/ServiceDesk", "createRequest");
                __envelope.setOutputSoapObject(__soapReq);
                
                PropertyInfo __info=null;
                __info = new PropertyInfo();
                __info.namespace="";
                __info.name="sid";
                __info.type=PropertyInfo.INTEGER_CLASS;
                __info.setValue(sid);
                __soapReq.addProperty(__info);
                __info = new PropertyInfo();
                __info.namespace="";
                __info.name="creatorHandle";
                __info.type=PropertyInfo.STRING_CLASS;
                __info.setValue(creatorHandle);
                __soapReq.addProperty(__info);
                __info = new PropertyInfo();
                __info.namespace="";
                __info.name="attrVals";
                __info.type=PropertyInfo.VECTOR_CLASS;
                __info.setValue(attrVals);
                __soapReq.addProperty(__info);
                __info = new PropertyInfo();
                __info.namespace="";
                __info.name="propertyValues";
                __info.type=PropertyInfo.VECTOR_CLASS;
                __info.setValue(propertyValues);
                __soapReq.addProperty(__info);
                __info = new PropertyInfo();
                __info.namespace="";
                __info.name="template";
                __info.type=PropertyInfo.STRING_CLASS;
                __info.setValue(template);
                __soapReq.addProperty(__info);
                __info = new PropertyInfo();
                __info.namespace="";
                __info.name="attributes";
                __info.type=PropertyInfo.VECTOR_CLASS;
                __info.setValue(attributes);
                __soapReq.addProperty(__info);
                __info = new PropertyInfo();
                __info.namespace="";
                __info.name="newRequestHandle";
                __info.type=PropertyInfo.STRING_CLASS;
                __info.setValue(newRequestHandle);
                __soapReq.addProperty(__info);
                __info = new PropertyInfo();
                __info.namespace="";
                __info.name="newRequestNumber";
                __info.type=PropertyInfo.STRING_CLASS;
                __info.setValue(newRequestNumber);
                __soapReq.addProperty(__info);
                return __envelope;
            }
            
            @Override
            public java.lang.Object ProcessResult(RIPExtendedSoapSerializationEnvelope __envelope,java.lang.Object __result)throws java.lang.Exception {
                return (RIPcreateRequestResponse)getResult(RIPcreateRequestResponse.class,__result,"createRequestResponse",__envelope);
            }
        },"");
    }
    
    public android.os.AsyncTask< Void, Void, RIPOperationResult< RIPcreateRequestResponse>> createRequestAsync(final Integer sid,final String creatorHandle,final RIPArrayOfString attrVals,final RIPArrayOfString propertyValues,final String template,final RIPArrayOfString attributes,final String newRequestHandle,final String newRequestNumber)
    {
        return executeAsync(new RIPFunctions.IFunc< RIPcreateRequestResponse>() {
            public RIPcreateRequestResponse Func() throws java.lang.Exception {
                return createRequest( sid,creatorHandle,attrVals,propertyValues,template,attributes,newRequestHandle,newRequestNumber);
            }
        });
    }
    
    public RIPcreateTicketResponse createTicket(final Integer sid,final String description,final String problem_type,final String userid,final String asset,final String duplication_id,final String newTicketHandle,final String newTicketNumber,final String returnUserData,final String returnApplicationData ) throws java.lang.Exception
    {
        return (RIPcreateTicketResponse)execute(new RIPIWcfMethod()
        {
            @Override
            public RIPExtendedSoapSerializationEnvelope CreateSoapEnvelope(){
              RIPExtendedSoapSerializationEnvelope __envelope = createEnvelope();
                SoapObject __soapReq = new SoapObject("http://www.ca.com/UnicenterServicePlus/ServiceDesk", "createTicket");
                __envelope.setOutputSoapObject(__soapReq);
                
                PropertyInfo __info=null;
                __info = new PropertyInfo();
                __info.namespace="";
                __info.name="sid";
                __info.type=PropertyInfo.INTEGER_CLASS;
                __info.setValue(sid);
                __soapReq.addProperty(__info);
                __info = new PropertyInfo();
                __info.namespace="";
                __info.name="description";
                __info.type=PropertyInfo.STRING_CLASS;
                __info.setValue(description);
                __soapReq.addProperty(__info);
                __info = new PropertyInfo();
                __info.namespace="";
                __info.name="problem_type";
                __info.type=PropertyInfo.STRING_CLASS;
                __info.setValue(problem_type);
                __soapReq.addProperty(__info);
                __info = new PropertyInfo();
                __info.namespace="";
                __info.name="userid";
                __info.type=PropertyInfo.STRING_CLASS;
                __info.setValue(userid);
                __soapReq.addProperty(__info);
                __info = new PropertyInfo();
                __info.namespace="";
                __info.name="asset";
                __info.type=PropertyInfo.STRING_CLASS;
                __info.setValue(asset);
                __soapReq.addProperty(__info);
                __info = new PropertyInfo();
                __info.namespace="";
                __info.name="duplication_id";
                __info.type=PropertyInfo.STRING_CLASS;
                __info.setValue(duplication_id);
                __soapReq.addProperty(__info);
                __info = new PropertyInfo();
                __info.namespace="";
                __info.name="newTicketHandle";
                __info.type=PropertyInfo.STRING_CLASS;
                __info.setValue(newTicketHandle);
                __soapReq.addProperty(__info);
                __info = new PropertyInfo();
                __info.namespace="";
                __info.name="newTicketNumber";
                __info.type=PropertyInfo.STRING_CLASS;
                __info.setValue(newTicketNumber);
                __soapReq.addProperty(__info);
                __info = new PropertyInfo();
                __info.namespace="";
                __info.name="returnUserData";
                __info.type=PropertyInfo.STRING_CLASS;
                __info.setValue(returnUserData);
                __soapReq.addProperty(__info);
                __info = new PropertyInfo();
                __info.namespace="";
                __info.name="returnApplicationData";
                __info.type=PropertyInfo.STRING_CLASS;
                __info.setValue(returnApplicationData);
                __soapReq.addProperty(__info);
                return __envelope;
            }
            
            @Override
            public java.lang.Object ProcessResult(RIPExtendedSoapSerializationEnvelope __envelope,java.lang.Object __result)throws java.lang.Exception {
                return (RIPcreateTicketResponse)getResult(RIPcreateTicketResponse.class,__result,"createTicketResponse",__envelope);
            }
        },"");
    }
    
    public android.os.AsyncTask< Void, Void, RIPOperationResult< RIPcreateTicketResponse>> createTicketAsync(final Integer sid,final String description,final String problem_type,final String userid,final String asset,final String duplication_id,final String newTicketHandle,final String newTicketNumber,final String returnUserData,final String returnApplicationData)
    {
        return executeAsync(new RIPFunctions.IFunc< RIPcreateTicketResponse>() {
            public RIPcreateTicketResponse Func() throws java.lang.Exception {
                return createTicket( sid,description,problem_type,userid,asset,duplication_id,newTicketHandle,newTicketNumber,returnUserData,returnApplicationData);
            }
        });
    }
    
    public RIPcreateQuickTicketResponse createQuickTicket(final Integer sid,final String customerHandle,final String description,final String newTicketHandle,final String newTicketNumber ) throws java.lang.Exception
    {
        return (RIPcreateQuickTicketResponse)execute(new RIPIWcfMethod()
        {
            @Override
            public RIPExtendedSoapSerializationEnvelope CreateSoapEnvelope(){
              RIPExtendedSoapSerializationEnvelope __envelope = createEnvelope();
                SoapObject __soapReq = new SoapObject("http://www.ca.com/UnicenterServicePlus/ServiceDesk", "createQuickTicket");
                __envelope.setOutputSoapObject(__soapReq);
                
                PropertyInfo __info=null;
                __info = new PropertyInfo();
                __info.namespace="";
                __info.name="sid";
                __info.type=PropertyInfo.INTEGER_CLASS;
                __info.setValue(sid);
                __soapReq.addProperty(__info);
                __info = new PropertyInfo();
                __info.namespace="";
                __info.name="customerHandle";
                __info.type=PropertyInfo.STRING_CLASS;
                __info.setValue(customerHandle);
                __soapReq.addProperty(__info);
                __info = new PropertyInfo();
                __info.namespace="";
                __info.name="description";
                __info.type=PropertyInfo.STRING_CLASS;
                __info.setValue(description);
                __soapReq.addProperty(__info);
                __info = new PropertyInfo();
                __info.namespace="";
                __info.name="newTicketHandle";
                __info.type=PropertyInfo.STRING_CLASS;
                __info.setValue(newTicketHandle);
                __soapReq.addProperty(__info);
                __info = new PropertyInfo();
                __info.namespace="";
                __info.name="newTicketNumber";
                __info.type=PropertyInfo.STRING_CLASS;
                __info.setValue(newTicketNumber);
                __soapReq.addProperty(__info);
                return __envelope;
            }
            
            @Override
            public java.lang.Object ProcessResult(RIPExtendedSoapSerializationEnvelope __envelope,java.lang.Object __result)throws java.lang.Exception {
                return (RIPcreateQuickTicketResponse)getResult(RIPcreateQuickTicketResponse.class,__result,"createQuickTicketResponse",__envelope);
            }
        },"");
    }
    
    public android.os.AsyncTask< Void, Void, RIPOperationResult< RIPcreateQuickTicketResponse>> createQuickTicketAsync(final Integer sid,final String customerHandle,final String description,final String newTicketHandle,final String newTicketNumber)
    {
        return executeAsync(new RIPFunctions.IFunc< RIPcreateQuickTicketResponse>() {
            public RIPcreateQuickTicketResponse Func() throws java.lang.Exception {
                return createQuickTicket( sid,customerHandle,description,newTicketHandle,newTicketNumber);
            }
        });
    }
    
    public String closeTicket(final Integer sid,final String description,final String ticketHandle ) throws java.lang.Exception
    {
        return (String)execute(new RIPIWcfMethod()
        {
            @Override
            public RIPExtendedSoapSerializationEnvelope CreateSoapEnvelope(){
              RIPExtendedSoapSerializationEnvelope __envelope = createEnvelope();
                SoapObject __soapReq = new SoapObject("http://www.ca.com/UnicenterServicePlus/ServiceDesk", "closeTicket");
                __envelope.setOutputSoapObject(__soapReq);
                
                PropertyInfo __info=null;
                __info = new PropertyInfo();
                __info.namespace="";
                __info.name="sid";
                __info.type=PropertyInfo.INTEGER_CLASS;
                __info.setValue(sid);
                __soapReq.addProperty(__info);
                __info = new PropertyInfo();
                __info.namespace="";
                __info.name="description";
                __info.type=PropertyInfo.STRING_CLASS;
                __info.setValue(description);
                __soapReq.addProperty(__info);
                __info = new PropertyInfo();
                __info.namespace="";
                __info.name="ticketHandle";
                __info.type=PropertyInfo.STRING_CLASS;
                __info.setValue(ticketHandle);
                __soapReq.addProperty(__info);
                return __envelope;
            }
            
            @Override
            public java.lang.Object ProcessResult(RIPExtendedSoapSerializationEnvelope __envelope,java.lang.Object __result)throws java.lang.Exception {
                SoapObject __soap=(SoapObject)__result;
                java.lang.Object obj = __soap.getProperty("closeTicketReturn");
                if (obj != null && obj.getClass().equals(SoapPrimitive.class))
                {
                    SoapPrimitive j =(SoapPrimitive) obj;
                    return j.toString();
                }
                else if (obj!= null && obj instanceof String){
                    return (String)obj;
                }
                return null;
            }
        },"");
    }
    
    public android.os.AsyncTask< Void, Void, RIPOperationResult< String>> closeTicketAsync(final Integer sid,final String description,final String ticketHandle)
    {
        return executeAsync(new RIPFunctions.IFunc< String>() {
            public String Func() throws java.lang.Exception {
                return closeTicket( sid,description,ticketHandle);
            }
        });
    }
    
    public void logComment(final Integer sid,final String ticketHandle,final String comment,final Integer internalFlag ) throws java.lang.Exception
    {
        execute(new RIPIWcfMethod()
        {
            @Override
            public RIPExtendedSoapSerializationEnvelope CreateSoapEnvelope(){
              RIPExtendedSoapSerializationEnvelope __envelope = createEnvelope();
                SoapObject __soapReq = new SoapObject("http://www.ca.com/UnicenterServicePlus/ServiceDesk", "logComment");
                __envelope.setOutputSoapObject(__soapReq);
                
                PropertyInfo __info=null;
                __info = new PropertyInfo();
                __info.namespace="";
                __info.name="sid";
                __info.type=PropertyInfo.INTEGER_CLASS;
                __info.setValue(sid);
                __soapReq.addProperty(__info);
                __info = new PropertyInfo();
                __info.namespace="";
                __info.name="ticketHandle";
                __info.type=PropertyInfo.STRING_CLASS;
                __info.setValue(ticketHandle);
                __soapReq.addProperty(__info);
                __info = new PropertyInfo();
                __info.namespace="";
                __info.name="comment";
                __info.type=PropertyInfo.STRING_CLASS;
                __info.setValue(comment);
                __soapReq.addProperty(__info);
                __info = new PropertyInfo();
                __info.namespace="";
                __info.name="internalFlag";
                __info.type=PropertyInfo.INTEGER_CLASS;
                __info.setValue(internalFlag);
                __soapReq.addProperty(__info);
                return __envelope;
            }
            
            @Override
            public java.lang.Object ProcessResult(RIPExtendedSoapSerializationEnvelope __envelope,java.lang.Object __result)throws java.lang.Exception {
                return null;
            }
        },"");
    }
    
    public android.os.AsyncTask< Void, Void, RIPOperationResult< Void>> logCommentAsync(final Integer sid,final String ticketHandle,final String comment,final Integer internalFlag)
    {
        return executeAsync(new RIPFunctions.IFunc< Void>()
        {
            @Override
            public Void Func() throws java.lang.Exception {
                logComment( sid,ticketHandle,comment,internalFlag);
                return null;
            }
        }) ;
    }
    
    public String getPolicyInfo(final Integer sid ) throws java.lang.Exception
    {
        return (String)execute(new RIPIWcfMethod()
        {
            @Override
            public RIPExtendedSoapSerializationEnvelope CreateSoapEnvelope(){
              RIPExtendedSoapSerializationEnvelope __envelope = createEnvelope();
                SoapObject __soapReq = new SoapObject("http://www.ca.com/UnicenterServicePlus/ServiceDesk", "getPolicyInfo");
                __envelope.setOutputSoapObject(__soapReq);
                
                PropertyInfo __info=null;
                __info = new PropertyInfo();
                __info.namespace="";
                __info.name="sid";
                __info.type=PropertyInfo.INTEGER_CLASS;
                __info.setValue(sid);
                __soapReq.addProperty(__info);
                return __envelope;
            }
            
            @Override
            public java.lang.Object ProcessResult(RIPExtendedSoapSerializationEnvelope __envelope,java.lang.Object __result)throws java.lang.Exception {
                SoapObject __soap=(SoapObject)__result;
                java.lang.Object obj = __soap.getProperty("getPolicyInfoReturn");
                if (obj != null && obj.getClass().equals(SoapPrimitive.class))
                {
                    SoapPrimitive j =(SoapPrimitive) obj;
                    return j.toString();
                }
                else if (obj!= null && obj instanceof String){
                    return (String)obj;
                }
                return null;
            }
        },"");
    }
    
    public android.os.AsyncTask< Void, Void, RIPOperationResult< String>> getPolicyInfoAsync(final Integer sid)
    {
        return executeAsync(new RIPFunctions.IFunc< String>() {
            public String Func() throws java.lang.Exception {
                return getPolicyInfo( sid);
            }
        });
    }
    
    public String detachChangeFromRequest(final Integer sid,final String creator,final String requestHandle,final String description ) throws java.lang.Exception
    {
        return (String)execute(new RIPIWcfMethod()
        {
            @Override
            public RIPExtendedSoapSerializationEnvelope CreateSoapEnvelope(){
              RIPExtendedSoapSerializationEnvelope __envelope = createEnvelope();
                SoapObject __soapReq = new SoapObject("http://www.ca.com/UnicenterServicePlus/ServiceDesk", "detachChangeFromRequest");
                __envelope.setOutputSoapObject(__soapReq);
                
                PropertyInfo __info=null;
                __info = new PropertyInfo();
                __info.namespace="";
                __info.name="sid";
                __info.type=PropertyInfo.INTEGER_CLASS;
                __info.setValue(sid);
                __soapReq.addProperty(__info);
                __info = new PropertyInfo();
                __info.namespace="";
                __info.name="creator";
                __info.type=PropertyInfo.STRING_CLASS;
                __info.setValue(creator);
                __soapReq.addProperty(__info);
                __info = new PropertyInfo();
                __info.namespace="";
                __info.name="requestHandle";
                __info.type=PropertyInfo.STRING_CLASS;
                __info.setValue(requestHandle);
                __soapReq.addProperty(__info);
                __info = new PropertyInfo();
                __info.namespace="";
                __info.name="description";
                __info.type=PropertyInfo.STRING_CLASS;
                __info.setValue(description);
                __soapReq.addProperty(__info);
                return __envelope;
            }
            
            @Override
            public java.lang.Object ProcessResult(RIPExtendedSoapSerializationEnvelope __envelope,java.lang.Object __result)throws java.lang.Exception {
                SoapObject __soap=(SoapObject)__result;
                java.lang.Object obj = __soap.getProperty("detachChangeFromRequestReturn");
                if (obj != null && obj.getClass().equals(SoapPrimitive.class))
                {
                    SoapPrimitive j =(SoapPrimitive) obj;
                    return j.toString();
                }
                else if (obj!= null && obj instanceof String){
                    return (String)obj;
                }
                return null;
            }
        },"");
    }
    
    public android.os.AsyncTask< Void, Void, RIPOperationResult< String>> detachChangeFromRequestAsync(final Integer sid,final String creator,final String requestHandle,final String description)
    {
        return executeAsync(new RIPFunctions.IFunc< String>() {
            public String Func() throws java.lang.Exception {
                return detachChangeFromRequest( sid,creator,requestHandle,description);
            }
        });
    }
    
    public String doSelect(final Integer sid,final String objectType,final String whereClause,final Integer maxRows,final RIPArrayOfString attributes ) throws java.lang.Exception
    {
        return (String)execute(new RIPIWcfMethod()
        {
            @Override
            public RIPExtendedSoapSerializationEnvelope CreateSoapEnvelope(){
              RIPExtendedSoapSerializationEnvelope __envelope = createEnvelope();
                __envelope.addMapping("","attributes",new RIPArrayOfString().getClass());
                SoapObject __soapReq = new SoapObject("http://www.ca.com/UnicenterServicePlus/ServiceDesk", "doSelect");
                __envelope.setOutputSoapObject(__soapReq);
                
                PropertyInfo __info=null;
                __info = new PropertyInfo();
                __info.namespace="";
                __info.name="sid";
                __info.type=PropertyInfo.INTEGER_CLASS;
                __info.setValue(sid);
                __soapReq.addProperty(__info);
                __info = new PropertyInfo();
                __info.namespace="";
                __info.name="objectType";
                __info.type=PropertyInfo.STRING_CLASS;
                __info.setValue(objectType);
                __soapReq.addProperty(__info);
                __info = new PropertyInfo();
                __info.namespace="";
                __info.name="whereClause";
                __info.type=PropertyInfo.STRING_CLASS;
                __info.setValue(whereClause);
                __soapReq.addProperty(__info);
                __info = new PropertyInfo();
                __info.namespace="";
                __info.name="maxRows";
                __info.type=PropertyInfo.INTEGER_CLASS;
                __info.setValue(maxRows);
                __soapReq.addProperty(__info);
                __info = new PropertyInfo();
                __info.namespace="";
                __info.name="attributes";
                __info.type=PropertyInfo.VECTOR_CLASS;
                __info.setValue(attributes);
                __soapReq.addProperty(__info);
                return __envelope;
            }
            
            @Override
            public java.lang.Object ProcessResult(RIPExtendedSoapSerializationEnvelope __envelope,java.lang.Object __result)throws java.lang.Exception {
                SoapObject __soap=(SoapObject)__result;
                java.lang.Object obj = __soap.getProperty("doSelectReturn");
                if (obj != null && obj.getClass().equals(SoapPrimitive.class))
                {
                    SoapPrimitive j =(SoapPrimitive) obj;
                    return j.toString();
                }
                else if (obj!= null && obj instanceof String){
                    return (String)obj;
                }
                return null;
            }
        },"");
    }
    
    public android.os.AsyncTask< Void, Void, RIPOperationResult< String>> doSelectAsync(final Integer sid,final String objectType,final String whereClause,final Integer maxRows,final RIPArrayOfString attributes)
    {
        return executeAsync(new RIPFunctions.IFunc< String>() {
            public String Func() throws java.lang.Exception {
                return doSelect( sid,objectType,whereClause,maxRows,attributes);
            }
        });
    }
    
    public RIPListResult doQuery(final Integer sid,final String objectType,final String whereClause ) throws java.lang.Exception
    {
        return (RIPListResult)execute(new RIPIWcfMethod()
        {
            @Override
            public RIPExtendedSoapSerializationEnvelope CreateSoapEnvelope(){
              RIPExtendedSoapSerializationEnvelope __envelope = createEnvelope();
                SoapObject __soapReq = new SoapObject("http://www.ca.com/UnicenterServicePlus/ServiceDesk", "doQuery");
                __envelope.setOutputSoapObject(__soapReq);
                
                PropertyInfo __info=null;
                __info = new PropertyInfo();
                __info.namespace="";
                __info.name="sid";
                __info.type=PropertyInfo.INTEGER_CLASS;
                __info.setValue(sid);
                __soapReq.addProperty(__info);
                __info = new PropertyInfo();
                __info.namespace="";
                __info.name="objectType";
                __info.type=PropertyInfo.STRING_CLASS;
                __info.setValue(objectType);
                __soapReq.addProperty(__info);
                __info = new PropertyInfo();
                __info.namespace="";
                __info.name="whereClause";
                __info.type=PropertyInfo.STRING_CLASS;
                __info.setValue(whereClause);
                __soapReq.addProperty(__info);
                return __envelope;
            }
            
            @Override
            public java.lang.Object ProcessResult(RIPExtendedSoapSerializationEnvelope __envelope,java.lang.Object __result)throws java.lang.Exception {
                return (RIPListResult)getResult(RIPListResult.class,__result,"doQueryReturn",__envelope);
            }
        },"");
    }
    
    public android.os.AsyncTask< Void, Void, RIPOperationResult< RIPListResult>> doQueryAsync(final Integer sid,final String objectType,final String whereClause)
    {
        return executeAsync(new RIPFunctions.IFunc< RIPListResult>() {
            public RIPListResult Func() throws java.lang.Exception {
                return doQuery( sid,objectType,whereClause);
            }
        });
    }
    
    public String escalate(final Integer sid,final String creator,final String objectHandle,final String description,final Boolean setAssignee,final String newAssigneeHandle,final Boolean setGroup,final String newGroupHandle,final Boolean setOrganization,final String newOrganizationHandle,final Boolean setPriority,final String newPriorityHandle ) throws java.lang.Exception
    {
        return (String)execute(new RIPIWcfMethod()
        {
            @Override
            public RIPExtendedSoapSerializationEnvelope CreateSoapEnvelope(){
              RIPExtendedSoapSerializationEnvelope __envelope = createEnvelope();
                SoapObject __soapReq = new SoapObject("http://www.ca.com/UnicenterServicePlus/ServiceDesk", "escalate");
                __envelope.setOutputSoapObject(__soapReq);
                
                PropertyInfo __info=null;
                __info = new PropertyInfo();
                __info.namespace="";
                __info.name="sid";
                __info.type=PropertyInfo.INTEGER_CLASS;
                __info.setValue(sid);
                __soapReq.addProperty(__info);
                __info = new PropertyInfo();
                __info.namespace="";
                __info.name="creator";
                __info.type=PropertyInfo.STRING_CLASS;
                __info.setValue(creator);
                __soapReq.addProperty(__info);
                __info = new PropertyInfo();
                __info.namespace="";
                __info.name="objectHandle";
                __info.type=PropertyInfo.STRING_CLASS;
                __info.setValue(objectHandle);
                __soapReq.addProperty(__info);
                __info = new PropertyInfo();
                __info.namespace="";
                __info.name="description";
                __info.type=PropertyInfo.STRING_CLASS;
                __info.setValue(description);
                __soapReq.addProperty(__info);
                __info = new PropertyInfo();
                __info.namespace="";
                __info.name="setAssignee";
                __info.type=PropertyInfo.BOOLEAN_CLASS;
                __info.setValue(setAssignee);
                __soapReq.addProperty(__info);
                __info = new PropertyInfo();
                __info.namespace="";
                __info.name="newAssigneeHandle";
                __info.type=PropertyInfo.STRING_CLASS;
                __info.setValue(newAssigneeHandle);
                __soapReq.addProperty(__info);
                __info = new PropertyInfo();
                __info.namespace="";
                __info.name="setGroup";
                __info.type=PropertyInfo.BOOLEAN_CLASS;
                __info.setValue(setGroup);
                __soapReq.addProperty(__info);
                __info = new PropertyInfo();
                __info.namespace="";
                __info.name="newGroupHandle";
                __info.type=PropertyInfo.STRING_CLASS;
                __info.setValue(newGroupHandle);
                __soapReq.addProperty(__info);
                __info = new PropertyInfo();
                __info.namespace="";
                __info.name="setOrganization";
                __info.type=PropertyInfo.BOOLEAN_CLASS;
                __info.setValue(setOrganization);
                __soapReq.addProperty(__info);
                __info = new PropertyInfo();
                __info.namespace="";
                __info.name="newOrganizationHandle";
                __info.type=PropertyInfo.STRING_CLASS;
                __info.setValue(newOrganizationHandle);
                __soapReq.addProperty(__info);
                __info = new PropertyInfo();
                __info.namespace="";
                __info.name="setPriority";
                __info.type=PropertyInfo.BOOLEAN_CLASS;
                __info.setValue(setPriority);
                __soapReq.addProperty(__info);
                __info = new PropertyInfo();
                __info.namespace="";
                __info.name="newPriorityHandle";
                __info.type=PropertyInfo.STRING_CLASS;
                __info.setValue(newPriorityHandle);
                __soapReq.addProperty(__info);
                return __envelope;
            }
            
            @Override
            public java.lang.Object ProcessResult(RIPExtendedSoapSerializationEnvelope __envelope,java.lang.Object __result)throws java.lang.Exception {
                SoapObject __soap=(SoapObject)__result;
                java.lang.Object obj = __soap.getProperty("escalateReturn");
                if (obj != null && obj.getClass().equals(SoapPrimitive.class))
                {
                    SoapPrimitive j =(SoapPrimitive) obj;
                    return j.toString();
                }
                else if (obj!= null && obj instanceof String){
                    return (String)obj;
                }
                return null;
            }
        },"");
    }
    
    public android.os.AsyncTask< Void, Void, RIPOperationResult< String>> escalateAsync(final Integer sid,final String creator,final String objectHandle,final String description,final Boolean setAssignee,final String newAssigneeHandle,final Boolean setGroup,final String newGroupHandle,final Boolean setOrganization,final String newOrganizationHandle,final Boolean setPriority,final String newPriorityHandle)
    {
        return executeAsync(new RIPFunctions.IFunc< String>() {
            public String Func() throws java.lang.Exception {
                return escalate( sid,creator,objectHandle,description,setAssignee,newAssigneeHandle,setGroup,newGroupHandle,setOrganization,newOrganizationHandle,setPriority,newPriorityHandle);
            }
        });
    }
    
    public void freeListHandles(final Integer sid,final RIPArrayOfInt handles ) throws java.lang.Exception
    {
        execute(new RIPIWcfMethod()
        {
            @Override
            public RIPExtendedSoapSerializationEnvelope CreateSoapEnvelope(){
              RIPExtendedSoapSerializationEnvelope __envelope = createEnvelope();
                __envelope.addMapping("","handles",new RIPArrayOfInt().getClass());
                SoapObject __soapReq = new SoapObject("http://www.ca.com/UnicenterServicePlus/ServiceDesk", "freeListHandles");
                __envelope.setOutputSoapObject(__soapReq);
                
                PropertyInfo __info=null;
                __info = new PropertyInfo();
                __info.namespace="";
                __info.name="sid";
                __info.type=PropertyInfo.INTEGER_CLASS;
                __info.setValue(sid);
                __soapReq.addProperty(__info);
                __info = new PropertyInfo();
                __info.namespace="";
                __info.name="handles";
                __info.type=PropertyInfo.VECTOR_CLASS;
                __info.setValue(handles);
                __soapReq.addProperty(__info);
                return __envelope;
            }
            
            @Override
            public java.lang.Object ProcessResult(RIPExtendedSoapSerializationEnvelope __envelope,java.lang.Object __result)throws java.lang.Exception {
                return null;
            }
        },"");
    }
    
    public android.os.AsyncTask< Void, Void, RIPOperationResult< Void>> freeListHandlesAsync(final Integer sid,final RIPArrayOfInt handles)
    {
        return executeAsync(new RIPFunctions.IFunc< Void>()
        {
            @Override
            public Void Func() throws java.lang.Exception {
                freeListHandles( sid,handles);
                return null;
            }
        }) ;
    }
    
    public RIPgetAssetExtensionInformationResponse getAssetExtensionInformation(final Integer sid,final String assetHandle,final RIPArrayOfString attributes,final String getAssetExtInfoResult,final String extensionHandle,final String extensionName ) throws java.lang.Exception
    {
        return (RIPgetAssetExtensionInformationResponse)execute(new RIPIWcfMethod()
        {
            @Override
            public RIPExtendedSoapSerializationEnvelope CreateSoapEnvelope(){
              RIPExtendedSoapSerializationEnvelope __envelope = createEnvelope();
                __envelope.addMapping("","attributes",new RIPArrayOfString().getClass());
                SoapObject __soapReq = new SoapObject("http://www.ca.com/UnicenterServicePlus/ServiceDesk", "getAssetExtensionInformation");
                __envelope.setOutputSoapObject(__soapReq);
                
                PropertyInfo __info=null;
                __info = new PropertyInfo();
                __info.namespace="";
                __info.name="sid";
                __info.type=PropertyInfo.INTEGER_CLASS;
                __info.setValue(sid);
                __soapReq.addProperty(__info);
                __info = new PropertyInfo();
                __info.namespace="";
                __info.name="assetHandle";
                __info.type=PropertyInfo.STRING_CLASS;
                __info.setValue(assetHandle);
                __soapReq.addProperty(__info);
                __info = new PropertyInfo();
                __info.namespace="";
                __info.name="attributes";
                __info.type=PropertyInfo.VECTOR_CLASS;
                __info.setValue(attributes);
                __soapReq.addProperty(__info);
                __info = new PropertyInfo();
                __info.namespace="";
                __info.name="getAssetExtInfoResult";
                __info.type=PropertyInfo.STRING_CLASS;
                __info.setValue(getAssetExtInfoResult);
                __soapReq.addProperty(__info);
                __info = new PropertyInfo();
                __info.namespace="";
                __info.name="extensionHandle";
                __info.type=PropertyInfo.STRING_CLASS;
                __info.setValue(extensionHandle);
                __soapReq.addProperty(__info);
                __info = new PropertyInfo();
                __info.namespace="";
                __info.name="extensionName";
                __info.type=PropertyInfo.STRING_CLASS;
                __info.setValue(extensionName);
                __soapReq.addProperty(__info);
                return __envelope;
            }
            
            @Override
            public java.lang.Object ProcessResult(RIPExtendedSoapSerializationEnvelope __envelope,java.lang.Object __result)throws java.lang.Exception {
                return (RIPgetAssetExtensionInformationResponse)getResult(RIPgetAssetExtensionInformationResponse.class,__result,"getAssetExtensionInformationResponse",__envelope);
            }
        },"");
    }
    
    public android.os.AsyncTask< Void, Void, RIPOperationResult< RIPgetAssetExtensionInformationResponse>> getAssetExtensionInformationAsync(final Integer sid,final String assetHandle,final RIPArrayOfString attributes,final String getAssetExtInfoResult,final String extensionHandle,final String extensionName)
    {
        return executeAsync(new RIPFunctions.IFunc< RIPgetAssetExtensionInformationResponse>() {
            public RIPgetAssetExtensionInformationResponse Func() throws java.lang.Exception {
                return getAssetExtensionInformation( sid,assetHandle,attributes,getAssetExtInfoResult,extensionHandle,extensionName);
            }
        });
    }
    
    public String getConfigurationMode(final Integer sid ) throws java.lang.Exception
    {
        return (String)execute(new RIPIWcfMethod()
        {
            @Override
            public RIPExtendedSoapSerializationEnvelope CreateSoapEnvelope(){
              RIPExtendedSoapSerializationEnvelope __envelope = createEnvelope();
                SoapObject __soapReq = new SoapObject("http://www.ca.com/UnicenterServicePlus/ServiceDesk", "getConfigurationMode");
                __envelope.setOutputSoapObject(__soapReq);
                
                PropertyInfo __info=null;
                __info = new PropertyInfo();
                __info.namespace="";
                __info.name="sid";
                __info.type=PropertyInfo.INTEGER_CLASS;
                __info.setValue(sid);
                __soapReq.addProperty(__info);
                return __envelope;
            }
            
            @Override
            public java.lang.Object ProcessResult(RIPExtendedSoapSerializationEnvelope __envelope,java.lang.Object __result)throws java.lang.Exception {
                SoapObject __soap=(SoapObject)__result;
                java.lang.Object obj = __soap.getProperty("getConfigurationModeReturn");
                if (obj != null && obj.getClass().equals(SoapPrimitive.class))
                {
                    SoapPrimitive j =(SoapPrimitive) obj;
                    return j.toString();
                }
                else if (obj!= null && obj instanceof String){
                    return (String)obj;
                }
                return null;
            }
        },"");
    }
    
    public android.os.AsyncTask< Void, Void, RIPOperationResult< String>> getConfigurationModeAsync(final Integer sid)
    {
        return executeAsync(new RIPFunctions.IFunc< String>() {
            public String Func() throws java.lang.Exception {
                return getConfigurationMode( sid);
            }
        });
    }
    
    public String getGroupMemberListValues(final Integer sid,final String whereClause,final Integer numToFetch,final RIPArrayOfString attributes ) throws java.lang.Exception
    {
        return (String)execute(new RIPIWcfMethod()
        {
            @Override
            public RIPExtendedSoapSerializationEnvelope CreateSoapEnvelope(){
              RIPExtendedSoapSerializationEnvelope __envelope = createEnvelope();
                __envelope.addMapping("","attributes",new RIPArrayOfString().getClass());
                SoapObject __soapReq = new SoapObject("http://www.ca.com/UnicenterServicePlus/ServiceDesk", "getGroupMemberListValues");
                __envelope.setOutputSoapObject(__soapReq);
                
                PropertyInfo __info=null;
                __info = new PropertyInfo();
                __info.namespace="";
                __info.name="sid";
                __info.type=PropertyInfo.INTEGER_CLASS;
                __info.setValue(sid);
                __soapReq.addProperty(__info);
                __info = new PropertyInfo();
                __info.namespace="";
                __info.name="whereClause";
                __info.type=PropertyInfo.STRING_CLASS;
                __info.setValue(whereClause);
                __soapReq.addProperty(__info);
                __info = new PropertyInfo();
                __info.namespace="";
                __info.name="numToFetch";
                __info.type=PropertyInfo.INTEGER_CLASS;
                __info.setValue(numToFetch);
                __soapReq.addProperty(__info);
                __info = new PropertyInfo();
                __info.namespace="";
                __info.name="attributes";
                __info.type=PropertyInfo.VECTOR_CLASS;
                __info.setValue(attributes);
                __soapReq.addProperty(__info);
                return __envelope;
            }
            
            @Override
            public java.lang.Object ProcessResult(RIPExtendedSoapSerializationEnvelope __envelope,java.lang.Object __result)throws java.lang.Exception {
                SoapObject __soap=(SoapObject)__result;
                java.lang.Object obj = __soap.getProperty("getGroupMemberListValuesReturn");
                if (obj != null && obj.getClass().equals(SoapPrimitive.class))
                {
                    SoapPrimitive j =(SoapPrimitive) obj;
                    return j.toString();
                }
                else if (obj!= null && obj instanceof String){
                    return (String)obj;
                }
                return null;
            }
        },"");
    }
    
    public android.os.AsyncTask< Void, Void, RIPOperationResult< String>> getGroupMemberListValuesAsync(final Integer sid,final String whereClause,final Integer numToFetch,final RIPArrayOfString attributes)
    {
        return executeAsync(new RIPFunctions.IFunc< String>() {
            public String Func() throws java.lang.Exception {
                return getGroupMemberListValues( sid,whereClause,numToFetch,attributes);
            }
        });
    }
    
    public String getObjectTypeInformation(final Integer sid,final String factory ) throws java.lang.Exception
    {
        return (String)execute(new RIPIWcfMethod()
        {
            @Override
            public RIPExtendedSoapSerializationEnvelope CreateSoapEnvelope(){
              RIPExtendedSoapSerializationEnvelope __envelope = createEnvelope();
                SoapObject __soapReq = new SoapObject("http://www.ca.com/UnicenterServicePlus/ServiceDesk", "getObjectTypeInformation");
                __envelope.setOutputSoapObject(__soapReq);
                
                PropertyInfo __info=null;
                __info = new PropertyInfo();
                __info.namespace="";
                __info.name="sid";
                __info.type=PropertyInfo.INTEGER_CLASS;
                __info.setValue(sid);
                __soapReq.addProperty(__info);
                __info = new PropertyInfo();
                __info.namespace="";
                __info.name="factory";
                __info.type=PropertyInfo.STRING_CLASS;
                __info.setValue(factory);
                __soapReq.addProperty(__info);
                return __envelope;
            }
            
            @Override
            public java.lang.Object ProcessResult(RIPExtendedSoapSerializationEnvelope __envelope,java.lang.Object __result)throws java.lang.Exception {
                SoapObject __soap=(SoapObject)__result;
                java.lang.Object obj = __soap.getProperty("getObjectTypeInformationReturn");
                if (obj != null && obj.getClass().equals(SoapPrimitive.class))
                {
                    SoapPrimitive j =(SoapPrimitive) obj;
                    return j.toString();
                }
                else if (obj!= null && obj instanceof String){
                    return (String)obj;
                }
                return null;
            }
        },"");
    }
    
    public android.os.AsyncTask< Void, Void, RIPOperationResult< String>> getObjectTypeInformationAsync(final Integer sid,final String factory)
    {
        return executeAsync(new RIPFunctions.IFunc< String>() {
            public String Func() throws java.lang.Exception {
                return getObjectTypeInformation( sid,factory);
            }
        });
    }
    
    public String getHandleForUserid(final Integer sid,final String userID ) throws java.lang.Exception
    {
        return (String)execute(new RIPIWcfMethod()
        {
            @Override
            public RIPExtendedSoapSerializationEnvelope CreateSoapEnvelope(){
              RIPExtendedSoapSerializationEnvelope __envelope = createEnvelope();
                SoapObject __soapReq = new SoapObject("http://www.ca.com/UnicenterServicePlus/ServiceDesk", "getHandleForUserid");
                __envelope.setOutputSoapObject(__soapReq);
                
                PropertyInfo __info=null;
                __info = new PropertyInfo();
                __info.namespace="";
                __info.name="sid";
                __info.type=PropertyInfo.INTEGER_CLASS;
                __info.setValue(sid);
                __soapReq.addProperty(__info);
                __info = new PropertyInfo();
                __info.namespace="";
                __info.name="userID";
                __info.type=PropertyInfo.STRING_CLASS;
                __info.setValue(userID);
                __soapReq.addProperty(__info);
                return __envelope;
            }
            
            @Override
            public java.lang.Object ProcessResult(RIPExtendedSoapSerializationEnvelope __envelope,java.lang.Object __result)throws java.lang.Exception {
                SoapObject __soap=(SoapObject)__result;
                java.lang.Object obj = __soap.getProperty("getHandleForUseridReturn");
                if (obj != null && obj.getClass().equals(SoapPrimitive.class))
                {
                    SoapPrimitive j =(SoapPrimitive) obj;
                    return j.toString();
                }
                else if (obj!= null && obj instanceof String){
                    return (String)obj;
                }
                return null;
            }
        },"");
    }
    
    public android.os.AsyncTask< Void, Void, RIPOperationResult< String>> getHandleForUseridAsync(final Integer sid,final String userID)
    {
        return executeAsync(new RIPFunctions.IFunc< String>() {
            public String Func() throws java.lang.Exception {
                return getHandleForUserid( sid,userID);
            }
        });
    }
    
    public String getAccessTypeForContact(final Integer sid,final String contactHandle ) throws java.lang.Exception
    {
        return (String)execute(new RIPIWcfMethod()
        {
            @Override
            public RIPExtendedSoapSerializationEnvelope CreateSoapEnvelope(){
              RIPExtendedSoapSerializationEnvelope __envelope = createEnvelope();
                SoapObject __soapReq = new SoapObject("http://www.ca.com/UnicenterServicePlus/ServiceDesk", "getAccessTypeForContact");
                __envelope.setOutputSoapObject(__soapReq);
                
                PropertyInfo __info=null;
                __info = new PropertyInfo();
                __info.namespace="";
                __info.name="sid";
                __info.type=PropertyInfo.INTEGER_CLASS;
                __info.setValue(sid);
                __soapReq.addProperty(__info);
                __info = new PropertyInfo();
                __info.namespace="";
                __info.name="contactHandle";
                __info.type=PropertyInfo.STRING_CLASS;
                __info.setValue(contactHandle);
                __soapReq.addProperty(__info);
                return __envelope;
            }
            
            @Override
            public java.lang.Object ProcessResult(RIPExtendedSoapSerializationEnvelope __envelope,java.lang.Object __result)throws java.lang.Exception {
                SoapObject __soap=(SoapObject)__result;
                java.lang.Object obj = __soap.getProperty("getAccessTypeForContactReturn");
                if (obj != null && obj.getClass().equals(SoapPrimitive.class))
                {
                    SoapPrimitive j =(SoapPrimitive) obj;
                    return j.toString();
                }
                else if (obj!= null && obj instanceof String){
                    return (String)obj;
                }
                return null;
            }
        },"");
    }
    
    public android.os.AsyncTask< Void, Void, RIPOperationResult< String>> getAccessTypeForContactAsync(final Integer sid,final String contactHandle)
    {
        return executeAsync(new RIPFunctions.IFunc< String>() {
            public String Func() throws java.lang.Exception {
                return getAccessTypeForContact( sid,contactHandle);
            }
        });
    }
    
    public String getListValues(final Integer sid,final Integer listHandle,final Integer startIndex,final Integer endIndex,final RIPArrayOfString attributeNames ) throws java.lang.Exception
    {
        return (String)execute(new RIPIWcfMethod()
        {
            @Override
            public RIPExtendedSoapSerializationEnvelope CreateSoapEnvelope(){
              RIPExtendedSoapSerializationEnvelope __envelope = createEnvelope();
                __envelope.addMapping("","attributeNames",new RIPArrayOfString().getClass());
                SoapObject __soapReq = new SoapObject("http://www.ca.com/UnicenterServicePlus/ServiceDesk", "getListValues");
                __envelope.setOutputSoapObject(__soapReq);
                
                PropertyInfo __info=null;
                __info = new PropertyInfo();
                __info.namespace="";
                __info.name="sid";
                __info.type=PropertyInfo.INTEGER_CLASS;
                __info.setValue(sid);
                __soapReq.addProperty(__info);
                __info = new PropertyInfo();
                __info.namespace="";
                __info.name="listHandle";
                __info.type=PropertyInfo.INTEGER_CLASS;
                __info.setValue(listHandle);
                __soapReq.addProperty(__info);
                __info = new PropertyInfo();
                __info.namespace="";
                __info.name="startIndex";
                __info.type=PropertyInfo.INTEGER_CLASS;
                __info.setValue(startIndex);
                __soapReq.addProperty(__info);
                __info = new PropertyInfo();
                __info.namespace="";
                __info.name="endIndex";
                __info.type=PropertyInfo.INTEGER_CLASS;
                __info.setValue(endIndex);
                __soapReq.addProperty(__info);
                __info = new PropertyInfo();
                __info.namespace="";
                __info.name="attributeNames";
                __info.type=PropertyInfo.VECTOR_CLASS;
                __info.setValue(attributeNames);
                __soapReq.addProperty(__info);
                return __envelope;
            }
            
            @Override
            public java.lang.Object ProcessResult(RIPExtendedSoapSerializationEnvelope __envelope,java.lang.Object __result)throws java.lang.Exception {
                SoapObject __soap=(SoapObject)__result;
                java.lang.Object obj = __soap.getProperty("getListValuesReturn");
                if (obj != null && obj.getClass().equals(SoapPrimitive.class))
                {
                    SoapPrimitive j =(SoapPrimitive) obj;
                    return j.toString();
                }
                else if (obj!= null && obj instanceof String){
                    return (String)obj;
                }
                return null;
            }
        },"");
    }
    
    public android.os.AsyncTask< Void, Void, RIPOperationResult< String>> getListValuesAsync(final Integer sid,final Integer listHandle,final Integer startIndex,final Integer endIndex,final RIPArrayOfString attributeNames)
    {
        return executeAsync(new RIPFunctions.IFunc< String>() {
            public String Func() throws java.lang.Exception {
                return getListValues( sid,listHandle,startIndex,endIndex,attributeNames);
            }
        });
    }
    
    public Integer getLrelLength(final Integer sid,final String contextObject,final String lrelName ) throws java.lang.Exception
    {
        return (Integer)execute(new RIPIWcfMethod()
        {
            @Override
            public RIPExtendedSoapSerializationEnvelope CreateSoapEnvelope(){
              RIPExtendedSoapSerializationEnvelope __envelope = createEnvelope();
                SoapObject __soapReq = new SoapObject("http://www.ca.com/UnicenterServicePlus/ServiceDesk", "getLrelLength");
                __envelope.setOutputSoapObject(__soapReq);
                
                PropertyInfo __info=null;
                __info = new PropertyInfo();
                __info.namespace="";
                __info.name="sid";
                __info.type=PropertyInfo.INTEGER_CLASS;
                __info.setValue(sid);
                __soapReq.addProperty(__info);
                __info = new PropertyInfo();
                __info.namespace="";
                __info.name="contextObject";
                __info.type=PropertyInfo.STRING_CLASS;
                __info.setValue(contextObject);
                __soapReq.addProperty(__info);
                __info = new PropertyInfo();
                __info.namespace="";
                __info.name="lrelName";
                __info.type=PropertyInfo.STRING_CLASS;
                __info.setValue(lrelName);
                __soapReq.addProperty(__info);
                return __envelope;
            }
            
            @Override
            public java.lang.Object ProcessResult(RIPExtendedSoapSerializationEnvelope __envelope,java.lang.Object __result)throws java.lang.Exception {
                SoapObject __soap=(SoapObject)__result;
                java.lang.Object obj = __soap.getProperty("getLrelLengthReturn");
                if (obj != null && obj.getClass().equals(SoapPrimitive.class))
                {
                    SoapPrimitive j =(SoapPrimitive) obj;
                    return Integer.parseInt(j.toString());
                }
                else if (obj!= null && obj instanceof Integer){
                    return (Integer)obj;
                }
                return null;
            }
        },"");
    }
    
    public android.os.AsyncTask< Void, Void, RIPOperationResult< Integer>> getLrelLengthAsync(final Integer sid,final String contextObject,final String lrelName)
    {
        return executeAsync(new RIPFunctions.IFunc< Integer>() {
            public Integer Func() throws java.lang.Exception {
                return getLrelLength( sid,contextObject,lrelName);
            }
        });
    }
    
    public String getLrelValues(final Integer sid,final String contextObject,final String lrelName,final Integer startIndex,final Integer endIndex,final RIPArrayOfString attributes ) throws java.lang.Exception
    {
        return (String)execute(new RIPIWcfMethod()
        {
            @Override
            public RIPExtendedSoapSerializationEnvelope CreateSoapEnvelope(){
              RIPExtendedSoapSerializationEnvelope __envelope = createEnvelope();
                __envelope.addMapping("","attributes",new RIPArrayOfString().getClass());
                SoapObject __soapReq = new SoapObject("http://www.ca.com/UnicenterServicePlus/ServiceDesk", "getLrelValues");
                __envelope.setOutputSoapObject(__soapReq);
                
                PropertyInfo __info=null;
                __info = new PropertyInfo();
                __info.namespace="";
                __info.name="sid";
                __info.type=PropertyInfo.INTEGER_CLASS;
                __info.setValue(sid);
                __soapReq.addProperty(__info);
                __info = new PropertyInfo();
                __info.namespace="";
                __info.name="contextObject";
                __info.type=PropertyInfo.STRING_CLASS;
                __info.setValue(contextObject);
                __soapReq.addProperty(__info);
                __info = new PropertyInfo();
                __info.namespace="";
                __info.name="lrelName";
                __info.type=PropertyInfo.STRING_CLASS;
                __info.setValue(lrelName);
                __soapReq.addProperty(__info);
                __info = new PropertyInfo();
                __info.namespace="";
                __info.name="startIndex";
                __info.type=PropertyInfo.INTEGER_CLASS;
                __info.setValue(startIndex);
                __soapReq.addProperty(__info);
                __info = new PropertyInfo();
                __info.namespace="";
                __info.name="endIndex";
                __info.type=PropertyInfo.INTEGER_CLASS;
                __info.setValue(endIndex);
                __soapReq.addProperty(__info);
                __info = new PropertyInfo();
                __info.namespace="";
                __info.name="attributes";
                __info.type=PropertyInfo.VECTOR_CLASS;
                __info.setValue(attributes);
                __soapReq.addProperty(__info);
                return __envelope;
            }
            
            @Override
            public java.lang.Object ProcessResult(RIPExtendedSoapSerializationEnvelope __envelope,java.lang.Object __result)throws java.lang.Exception {
                SoapObject __soap=(SoapObject)__result;
                java.lang.Object obj = __soap.getProperty("getLrelValuesReturn");
                if (obj != null && obj.getClass().equals(SoapPrimitive.class))
                {
                    SoapPrimitive j =(SoapPrimitive) obj;
                    return j.toString();
                }
                else if (obj!= null && obj instanceof String){
                    return (String)obj;
                }
                return null;
            }
        },"");
    }
    
    public android.os.AsyncTask< Void, Void, RIPOperationResult< String>> getLrelValuesAsync(final Integer sid,final String contextObject,final String lrelName,final Integer startIndex,final Integer endIndex,final RIPArrayOfString attributes)
    {
        return executeAsync(new RIPFunctions.IFunc< String>() {
            public String Func() throws java.lang.Exception {
                return getLrelValues( sid,contextObject,lrelName,startIndex,endIndex,attributes);
            }
        });
    }
    
    public RIPListResult getNotificationsForContact(final Integer sid,final String contactHandle,final Integer queryStatus ) throws java.lang.Exception
    {
        return (RIPListResult)execute(new RIPIWcfMethod()
        {
            @Override
            public RIPExtendedSoapSerializationEnvelope CreateSoapEnvelope(){
              RIPExtendedSoapSerializationEnvelope __envelope = createEnvelope();
                SoapObject __soapReq = new SoapObject("http://www.ca.com/UnicenterServicePlus/ServiceDesk", "getNotificationsForContact");
                __envelope.setOutputSoapObject(__soapReq);
                
                PropertyInfo __info=null;
                __info = new PropertyInfo();
                __info.namespace="";
                __info.name="sid";
                __info.type=PropertyInfo.INTEGER_CLASS;
                __info.setValue(sid);
                __soapReq.addProperty(__info);
                __info = new PropertyInfo();
                __info.namespace="";
                __info.name="contactHandle";
                __info.type=PropertyInfo.STRING_CLASS;
                __info.setValue(contactHandle);
                __soapReq.addProperty(__info);
                __info = new PropertyInfo();
                __info.namespace="";
                __info.name="queryStatus";
                __info.type=PropertyInfo.INTEGER_CLASS;
                __info.setValue(queryStatus);
                __soapReq.addProperty(__info);
                return __envelope;
            }
            
            @Override
            public java.lang.Object ProcessResult(RIPExtendedSoapSerializationEnvelope __envelope,java.lang.Object __result)throws java.lang.Exception {
                return (RIPListResult)getResult(RIPListResult.class,__result,"getNotificationsForContactReturn",__envelope);
            }
        },"");
    }
    
    public android.os.AsyncTask< Void, Void, RIPOperationResult< RIPListResult>> getNotificationsForContactAsync(final Integer sid,final String contactHandle,final Integer queryStatus)
    {
        return executeAsync(new RIPFunctions.IFunc< RIPListResult>() {
            public RIPListResult Func() throws java.lang.Exception {
                return getNotificationsForContact( sid,contactHandle,queryStatus);
            }
        });
    }
    
    public String getObjectValues(final Integer sid,final String objectHandle,final RIPArrayOfString attributes ) throws java.lang.Exception
    {
        return (String)execute(new RIPIWcfMethod()
        {
            @Override
            public RIPExtendedSoapSerializationEnvelope CreateSoapEnvelope(){
              RIPExtendedSoapSerializationEnvelope __envelope = createEnvelope();
                __envelope.addMapping("","attributes",new RIPArrayOfString().getClass());
                SoapObject __soapReq = new SoapObject("http://www.ca.com/UnicenterServicePlus/ServiceDesk", "getObjectValues");
                __envelope.setOutputSoapObject(__soapReq);
                
                PropertyInfo __info=null;
                __info = new PropertyInfo();
                __info.namespace="";
                __info.name="sid";
                __info.type=PropertyInfo.INTEGER_CLASS;
                __info.setValue(sid);
                __soapReq.addProperty(__info);
                __info = new PropertyInfo();
                __info.namespace="";
                __info.name="objectHandle";
                __info.type=PropertyInfo.STRING_CLASS;
                __info.setValue(objectHandle);
                __soapReq.addProperty(__info);
                __info = new PropertyInfo();
                __info.namespace="";
                __info.name="attributes";
                __info.type=PropertyInfo.VECTOR_CLASS;
                __info.setValue(attributes);
                __soapReq.addProperty(__info);
                return __envelope;
            }
            
            @Override
            public java.lang.Object ProcessResult(RIPExtendedSoapSerializationEnvelope __envelope,java.lang.Object __result)throws java.lang.Exception {
                SoapObject __soap=(SoapObject)__result;
                java.lang.Object obj = __soap.getProperty("getObjectValuesReturn");
                if (obj != null && obj.getClass().equals(SoapPrimitive.class))
                {
                    SoapPrimitive j =(SoapPrimitive) obj;
                    return j.toString();
                }
                else if (obj!= null && obj instanceof String){
                    return (String)obj;
                }
                return null;
            }
        },"");
    }
    
    public android.os.AsyncTask< Void, Void, RIPOperationResult< String>> getObjectValuesAsync(final Integer sid,final String objectHandle,final RIPArrayOfString attributes)
    {
        return executeAsync(new RIPFunctions.IFunc< String>() {
            public String Func() throws java.lang.Exception {
                return getObjectValues( sid,objectHandle,attributes);
            }
        });
    }
    
    public RIPListResult getPendingChangeTaskListForContact(final Integer sid,final String contactHandle ) throws java.lang.Exception
    {
        return (RIPListResult)execute(new RIPIWcfMethod()
        {
            @Override
            public RIPExtendedSoapSerializationEnvelope CreateSoapEnvelope(){
              RIPExtendedSoapSerializationEnvelope __envelope = createEnvelope();
                SoapObject __soapReq = new SoapObject("http://www.ca.com/UnicenterServicePlus/ServiceDesk", "getPendingChangeTaskListForContact");
                __envelope.setOutputSoapObject(__soapReq);
                
                PropertyInfo __info=null;
                __info = new PropertyInfo();
                __info.namespace="";
                __info.name="sid";
                __info.type=PropertyInfo.INTEGER_CLASS;
                __info.setValue(sid);
                __soapReq.addProperty(__info);
                __info = new PropertyInfo();
                __info.namespace="";
                __info.name="contactHandle";
                __info.type=PropertyInfo.STRING_CLASS;
                __info.setValue(contactHandle);
                __soapReq.addProperty(__info);
                return __envelope;
            }
            
            @Override
            public java.lang.Object ProcessResult(RIPExtendedSoapSerializationEnvelope __envelope,java.lang.Object __result)throws java.lang.Exception {
                return (RIPListResult)getResult(RIPListResult.class,__result,"getPendingChangeTaskListForContactReturn",__envelope);
            }
        },"");
    }
    
    public android.os.AsyncTask< Void, Void, RIPOperationResult< RIPListResult>> getPendingChangeTaskListForContactAsync(final Integer sid,final String contactHandle)
    {
        return executeAsync(new RIPFunctions.IFunc< RIPListResult>() {
            public RIPListResult Func() throws java.lang.Exception {
                return getPendingChangeTaskListForContact( sid,contactHandle);
            }
        });
    }
    
    public RIPListResult getPendingIssueTaskListForContact(final Integer sid,final String contactHandle ) throws java.lang.Exception
    {
        return (RIPListResult)execute(new RIPIWcfMethod()
        {
            @Override
            public RIPExtendedSoapSerializationEnvelope CreateSoapEnvelope(){
              RIPExtendedSoapSerializationEnvelope __envelope = createEnvelope();
                SoapObject __soapReq = new SoapObject("http://www.ca.com/UnicenterServicePlus/ServiceDesk", "getPendingIssueTaskListForContact");
                __envelope.setOutputSoapObject(__soapReq);
                
                PropertyInfo __info=null;
                __info = new PropertyInfo();
                __info.namespace="";
                __info.name="sid";
                __info.type=PropertyInfo.INTEGER_CLASS;
                __info.setValue(sid);
                __soapReq.addProperty(__info);
                __info = new PropertyInfo();
                __info.namespace="";
                __info.name="contactHandle";
                __info.type=PropertyInfo.STRING_CLASS;
                __info.setValue(contactHandle);
                __soapReq.addProperty(__info);
                return __envelope;
            }
            
            @Override
            public java.lang.Object ProcessResult(RIPExtendedSoapSerializationEnvelope __envelope,java.lang.Object __result)throws java.lang.Exception {
                return (RIPListResult)getResult(RIPListResult.class,__result,"getPendingIssueTaskListForContactReturn",__envelope);
            }
        },"");
    }
    
    public android.os.AsyncTask< Void, Void, RIPOperationResult< RIPListResult>> getPendingIssueTaskListForContactAsync(final Integer sid,final String contactHandle)
    {
        return executeAsync(new RIPFunctions.IFunc< RIPListResult>() {
            public RIPListResult Func() throws java.lang.Exception {
                return getPendingIssueTaskListForContact( sid,contactHandle);
            }
        });
    }
    
    public String getPropertyInfoForCategory(final Integer sid,final String categoryHandle,final RIPArrayOfString attributes ) throws java.lang.Exception
    {
        return (String)execute(new RIPIWcfMethod()
        {
            @Override
            public RIPExtendedSoapSerializationEnvelope CreateSoapEnvelope(){
              RIPExtendedSoapSerializationEnvelope __envelope = createEnvelope();
                __envelope.addMapping("","attributes",new RIPArrayOfString().getClass());
                SoapObject __soapReq = new SoapObject("http://www.ca.com/UnicenterServicePlus/ServiceDesk", "getPropertyInfoForCategory");
                __envelope.setOutputSoapObject(__soapReq);
                
                PropertyInfo __info=null;
                __info = new PropertyInfo();
                __info.namespace="";
                __info.name="sid";
                __info.type=PropertyInfo.INTEGER_CLASS;
                __info.setValue(sid);
                __soapReq.addProperty(__info);
                __info = new PropertyInfo();
                __info.namespace="";
                __info.name="categoryHandle";
                __info.type=PropertyInfo.STRING_CLASS;
                __info.setValue(categoryHandle);
                __soapReq.addProperty(__info);
                __info = new PropertyInfo();
                __info.namespace="";
                __info.name="attributes";
                __info.type=PropertyInfo.VECTOR_CLASS;
                __info.setValue(attributes);
                __soapReq.addProperty(__info);
                return __envelope;
            }
            
            @Override
            public java.lang.Object ProcessResult(RIPExtendedSoapSerializationEnvelope __envelope,java.lang.Object __result)throws java.lang.Exception {
                SoapObject __soap=(SoapObject)__result;
                java.lang.Object obj = __soap.getProperty("getPropertyInfoForCategoryReturn");
                if (obj != null && obj.getClass().equals(SoapPrimitive.class))
                {
                    SoapPrimitive j =(SoapPrimitive) obj;
                    return j.toString();
                }
                else if (obj!= null && obj instanceof String){
                    return (String)obj;
                }
                return null;
            }
        },"");
    }
    
    public android.os.AsyncTask< Void, Void, RIPOperationResult< String>> getPropertyInfoForCategoryAsync(final Integer sid,final String categoryHandle,final RIPArrayOfString attributes)
    {
        return executeAsync(new RIPFunctions.IFunc< String>() {
            public String Func() throws java.lang.Exception {
                return getPropertyInfoForCategory( sid,categoryHandle,attributes);
            }
        });
    }
    
    public RIPListResult getRelatedList(final Integer sid,final String objectHandle,final String listName ) throws java.lang.Exception
    {
        return (RIPListResult)execute(new RIPIWcfMethod()
        {
            @Override
            public RIPExtendedSoapSerializationEnvelope CreateSoapEnvelope(){
              RIPExtendedSoapSerializationEnvelope __envelope = createEnvelope();
                SoapObject __soapReq = new SoapObject("http://www.ca.com/UnicenterServicePlus/ServiceDesk", "getRelatedList");
                __envelope.setOutputSoapObject(__soapReq);
                
                PropertyInfo __info=null;
                __info = new PropertyInfo();
                __info.namespace="";
                __info.name="sid";
                __info.type=PropertyInfo.INTEGER_CLASS;
                __info.setValue(sid);
                __soapReq.addProperty(__info);
                __info = new PropertyInfo();
                __info.namespace="";
                __info.name="objectHandle";
                __info.type=PropertyInfo.STRING_CLASS;
                __info.setValue(objectHandle);
                __soapReq.addProperty(__info);
                __info = new PropertyInfo();
                __info.namespace="";
                __info.name="listName";
                __info.type=PropertyInfo.STRING_CLASS;
                __info.setValue(listName);
                __soapReq.addProperty(__info);
                return __envelope;
            }
            
            @Override
            public java.lang.Object ProcessResult(RIPExtendedSoapSerializationEnvelope __envelope,java.lang.Object __result)throws java.lang.Exception {
                return (RIPListResult)getResult(RIPListResult.class,__result,"getRelatedListReturn",__envelope);
            }
        },"");
    }
    
    public android.os.AsyncTask< Void, Void, RIPOperationResult< RIPListResult>> getRelatedListAsync(final Integer sid,final String objectHandle,final String listName)
    {
        return executeAsync(new RIPFunctions.IFunc< RIPListResult>() {
            public RIPListResult Func() throws java.lang.Exception {
                return getRelatedList( sid,objectHandle,listName);
            }
        });
    }
    
    public RIPgetRelatedListValuesResponse getRelatedListValues(final Integer sid,final String objectHandle,final String listName,final Integer numToFetch,final RIPArrayOfString attributes,final String getRelatedListValuesResult,final Integer numRowsFound ) throws java.lang.Exception
    {
        return (RIPgetRelatedListValuesResponse)execute(new RIPIWcfMethod()
        {
            @Override
            public RIPExtendedSoapSerializationEnvelope CreateSoapEnvelope(){
              RIPExtendedSoapSerializationEnvelope __envelope = createEnvelope();
                __envelope.addMapping("","attributes",new RIPArrayOfString().getClass());
                SoapObject __soapReq = new SoapObject("http://www.ca.com/UnicenterServicePlus/ServiceDesk", "getRelatedListValues");
                __envelope.setOutputSoapObject(__soapReq);
                
                PropertyInfo __info=null;
                __info = new PropertyInfo();
                __info.namespace="";
                __info.name="sid";
                __info.type=PropertyInfo.INTEGER_CLASS;
                __info.setValue(sid);
                __soapReq.addProperty(__info);
                __info = new PropertyInfo();
                __info.namespace="";
                __info.name="objectHandle";
                __info.type=PropertyInfo.STRING_CLASS;
                __info.setValue(objectHandle);
                __soapReq.addProperty(__info);
                __info = new PropertyInfo();
                __info.namespace="";
                __info.name="listName";
                __info.type=PropertyInfo.STRING_CLASS;
                __info.setValue(listName);
                __soapReq.addProperty(__info);
                __info = new PropertyInfo();
                __info.namespace="";
                __info.name="numToFetch";
                __info.type=PropertyInfo.INTEGER_CLASS;
                __info.setValue(numToFetch);
                __soapReq.addProperty(__info);
                __info = new PropertyInfo();
                __info.namespace="";
                __info.name="attributes";
                __info.type=PropertyInfo.VECTOR_CLASS;
                __info.setValue(attributes);
                __soapReq.addProperty(__info);
                __info = new PropertyInfo();
                __info.namespace="";
                __info.name="getRelatedListValuesResult";
                __info.type=PropertyInfo.STRING_CLASS;
                __info.setValue(getRelatedListValuesResult);
                __soapReq.addProperty(__info);
                __info = new PropertyInfo();
                __info.namespace="";
                __info.name="numRowsFound";
                __info.type=PropertyInfo.INTEGER_CLASS;
                __info.setValue(numRowsFound);
                __soapReq.addProperty(__info);
                return __envelope;
            }
            
            @Override
            public java.lang.Object ProcessResult(RIPExtendedSoapSerializationEnvelope __envelope,java.lang.Object __result)throws java.lang.Exception {
                return (RIPgetRelatedListValuesResponse)getResult(RIPgetRelatedListValuesResponse.class,__result,"getRelatedListValuesResponse",__envelope);
            }
        },"");
    }
    
    public android.os.AsyncTask< Void, Void, RIPOperationResult< RIPgetRelatedListValuesResponse>> getRelatedListValuesAsync(final Integer sid,final String objectHandle,final String listName,final Integer numToFetch,final RIPArrayOfString attributes,final String getRelatedListValuesResult,final Integer numRowsFound)
    {
        return executeAsync(new RIPFunctions.IFunc< RIPgetRelatedListValuesResponse>() {
            public RIPgetRelatedListValuesResponse Func() throws java.lang.Exception {
                return getRelatedListValues( sid,objectHandle,listName,numToFetch,attributes,getRelatedListValuesResult,numRowsFound);
            }
        });
    }
    
    public String getWorkFlowTemplates(final Integer sid,final String objectHandle,final RIPArrayOfString attributes ) throws java.lang.Exception
    {
        return (String)execute(new RIPIWcfMethod()
        {
            @Override
            public RIPExtendedSoapSerializationEnvelope CreateSoapEnvelope(){
              RIPExtendedSoapSerializationEnvelope __envelope = createEnvelope();
                __envelope.addMapping("","attributes",new RIPArrayOfString().getClass());
                SoapObject __soapReq = new SoapObject("http://www.ca.com/UnicenterServicePlus/ServiceDesk", "getWorkFlowTemplates");
                __envelope.setOutputSoapObject(__soapReq);
                
                PropertyInfo __info=null;
                __info = new PropertyInfo();
                __info.namespace="";
                __info.name="sid";
                __info.type=PropertyInfo.INTEGER_CLASS;
                __info.setValue(sid);
                __soapReq.addProperty(__info);
                __info = new PropertyInfo();
                __info.namespace="";
                __info.name="objectHandle";
                __info.type=PropertyInfo.STRING_CLASS;
                __info.setValue(objectHandle);
                __soapReq.addProperty(__info);
                __info = new PropertyInfo();
                __info.namespace="";
                __info.name="attributes";
                __info.type=PropertyInfo.VECTOR_CLASS;
                __info.setValue(attributes);
                __soapReq.addProperty(__info);
                return __envelope;
            }
            
            @Override
            public java.lang.Object ProcessResult(RIPExtendedSoapSerializationEnvelope __envelope,java.lang.Object __result)throws java.lang.Exception {
                SoapObject __soap=(SoapObject)__result;
                java.lang.Object obj = __soap.getProperty("getWorkFlowTemplatesReturn");
                if (obj != null && obj.getClass().equals(SoapPrimitive.class))
                {
                    SoapPrimitive j =(SoapPrimitive) obj;
                    return j.toString();
                }
                else if (obj!= null && obj instanceof String){
                    return (String)obj;
                }
                return null;
            }
        },"");
    }
    
    public android.os.AsyncTask< Void, Void, RIPOperationResult< String>> getWorkFlowTemplatesAsync(final Integer sid,final String objectHandle,final RIPArrayOfString attributes)
    {
        return executeAsync(new RIPFunctions.IFunc< String>() {
            public String Func() throws java.lang.Exception {
                return getWorkFlowTemplates( sid,objectHandle,attributes);
            }
        });
    }
    
    public String getTaskListValues(final Integer sid,final String objectHandle,final RIPArrayOfString attributes ) throws java.lang.Exception
    {
        return (String)execute(new RIPIWcfMethod()
        {
            @Override
            public RIPExtendedSoapSerializationEnvelope CreateSoapEnvelope(){
              RIPExtendedSoapSerializationEnvelope __envelope = createEnvelope();
                __envelope.addMapping("","attributes",new RIPArrayOfString().getClass());
                SoapObject __soapReq = new SoapObject("http://www.ca.com/UnicenterServicePlus/ServiceDesk", "getTaskListValues");
                __envelope.setOutputSoapObject(__soapReq);
                
                PropertyInfo __info=null;
                __info = new PropertyInfo();
                __info.namespace="";
                __info.name="sid";
                __info.type=PropertyInfo.INTEGER_CLASS;
                __info.setValue(sid);
                __soapReq.addProperty(__info);
                __info = new PropertyInfo();
                __info.namespace="";
                __info.name="objectHandle";
                __info.type=PropertyInfo.STRING_CLASS;
                __info.setValue(objectHandle);
                __soapReq.addProperty(__info);
                __info = new PropertyInfo();
                __info.namespace="";
                __info.name="attributes";
                __info.type=PropertyInfo.VECTOR_CLASS;
                __info.setValue(attributes);
                __soapReq.addProperty(__info);
                return __envelope;
            }
            
            @Override
            public java.lang.Object ProcessResult(RIPExtendedSoapSerializationEnvelope __envelope,java.lang.Object __result)throws java.lang.Exception {
                SoapObject __soap=(SoapObject)__result;
                java.lang.Object obj = __soap.getProperty("getTaskListValuesReturn");
                if (obj != null && obj.getClass().equals(SoapPrimitive.class))
                {
                    SoapPrimitive j =(SoapPrimitive) obj;
                    return j.toString();
                }
                else if (obj!= null && obj instanceof String){
                    return (String)obj;
                }
                return null;
            }
        },"");
    }
    
    public android.os.AsyncTask< Void, Void, RIPOperationResult< String>> getTaskListValuesAsync(final Integer sid,final String objectHandle,final RIPArrayOfString attributes)
    {
        return executeAsync(new RIPFunctions.IFunc< String>() {
            public String Func() throws java.lang.Exception {
                return getTaskListValues( sid,objectHandle,attributes);
            }
        });
    }
    
    public String getValidTaskTransitions(final Integer sid,final String taskHandle,final RIPArrayOfString attributes ) throws java.lang.Exception
    {
        return (String)execute(new RIPIWcfMethod()
        {
            @Override
            public RIPExtendedSoapSerializationEnvelope CreateSoapEnvelope(){
              RIPExtendedSoapSerializationEnvelope __envelope = createEnvelope();
                __envelope.addMapping("","attributes",new RIPArrayOfString().getClass());
                SoapObject __soapReq = new SoapObject("http://www.ca.com/UnicenterServicePlus/ServiceDesk", "getValidTaskTransitions");
                __envelope.setOutputSoapObject(__soapReq);
                
                PropertyInfo __info=null;
                __info = new PropertyInfo();
                __info.namespace="";
                __info.name="sid";
                __info.type=PropertyInfo.INTEGER_CLASS;
                __info.setValue(sid);
                __soapReq.addProperty(__info);
                __info = new PropertyInfo();
                __info.namespace="";
                __info.name="taskHandle";
                __info.type=PropertyInfo.STRING_CLASS;
                __info.setValue(taskHandle);
                __soapReq.addProperty(__info);
                __info = new PropertyInfo();
                __info.namespace="";
                __info.name="attributes";
                __info.type=PropertyInfo.VECTOR_CLASS;
                __info.setValue(attributes);
                __soapReq.addProperty(__info);
                return __envelope;
            }
            
            @Override
            public java.lang.Object ProcessResult(RIPExtendedSoapSerializationEnvelope __envelope,java.lang.Object __result)throws java.lang.Exception {
                SoapObject __soap=(SoapObject)__result;
                java.lang.Object obj = __soap.getProperty("getValidTaskTransitionsReturn");
                if (obj != null && obj.getClass().equals(SoapPrimitive.class))
                {
                    SoapPrimitive j =(SoapPrimitive) obj;
                    return j.toString();
                }
                else if (obj!= null && obj instanceof String){
                    return (String)obj;
                }
                return null;
            }
        },"");
    }
    
    public android.os.AsyncTask< Void, Void, RIPOperationResult< String>> getValidTaskTransitionsAsync(final Integer sid,final String taskHandle,final RIPArrayOfString attributes)
    {
        return executeAsync(new RIPFunctions.IFunc< String>() {
            public String Func() throws java.lang.Exception {
                return getValidTaskTransitions( sid,taskHandle,attributes);
            }
        });
    }
    
    public String getValidTransitions(final Integer sid,final String handle,final String ticketFactory ) throws java.lang.Exception
    {
        return (String)execute(new RIPIWcfMethod()
        {
            @Override
            public RIPExtendedSoapSerializationEnvelope CreateSoapEnvelope(){
              RIPExtendedSoapSerializationEnvelope __envelope = createEnvelope();
                SoapObject __soapReq = new SoapObject("http://www.ca.com/UnicenterServicePlus/ServiceDesk", "getValidTransitions");
                __envelope.setOutputSoapObject(__soapReq);
                
                PropertyInfo __info=null;
                __info = new PropertyInfo();
                __info.namespace="";
                __info.name="sid";
                __info.type=PropertyInfo.INTEGER_CLASS;
                __info.setValue(sid);
                __soapReq.addProperty(__info);
                __info = new PropertyInfo();
                __info.namespace="";
                __info.name="handle";
                __info.type=PropertyInfo.STRING_CLASS;
                __info.setValue(handle);
                __soapReq.addProperty(__info);
                __info = new PropertyInfo();
                __info.namespace="";
                __info.name="ticketFactory";
                __info.type=PropertyInfo.STRING_CLASS;
                __info.setValue(ticketFactory);
                __soapReq.addProperty(__info);
                return __envelope;
            }
            
            @Override
            public java.lang.Object ProcessResult(RIPExtendedSoapSerializationEnvelope __envelope,java.lang.Object __result)throws java.lang.Exception {
                SoapObject __soap=(SoapObject)__result;
                java.lang.Object obj = __soap.getProperty("getValidTransitionsReturn");
                if (obj != null && obj.getClass().equals(SoapPrimitive.class))
                {
                    SoapPrimitive j =(SoapPrimitive) obj;
                    return j.toString();
                }
                else if (obj!= null && obj instanceof String){
                    return (String)obj;
                }
                return null;
            }
        },"");
    }
    
    public android.os.AsyncTask< Void, Void, RIPOperationResult< String>> getValidTransitionsAsync(final Integer sid,final String handle,final String ticketFactory)
    {
        return executeAsync(new RIPFunctions.IFunc< String>() {
            public String Func() throws java.lang.Exception {
                return getValidTransitions( sid,handle,ticketFactory);
            }
        });
    }
    
    public String getDependentAttrControls(final Integer sid,final String handle,final RIPArrayOfString attrVals ) throws java.lang.Exception
    {
        return (String)execute(new RIPIWcfMethod()
        {
            @Override
            public RIPExtendedSoapSerializationEnvelope CreateSoapEnvelope(){
              RIPExtendedSoapSerializationEnvelope __envelope = createEnvelope();
                __envelope.addMapping("","attrVals",new RIPArrayOfString().getClass());
                SoapObject __soapReq = new SoapObject("http://www.ca.com/UnicenterServicePlus/ServiceDesk", "getDependentAttrControls");
                __envelope.setOutputSoapObject(__soapReq);
                
                PropertyInfo __info=null;
                __info = new PropertyInfo();
                __info.namespace="";
                __info.name="sid";
                __info.type=PropertyInfo.INTEGER_CLASS;
                __info.setValue(sid);
                __soapReq.addProperty(__info);
                __info = new PropertyInfo();
                __info.namespace="";
                __info.name="handle";
                __info.type=PropertyInfo.STRING_CLASS;
                __info.setValue(handle);
                __soapReq.addProperty(__info);
                __info = new PropertyInfo();
                __info.namespace="";
                __info.name="attrVals";
                __info.type=PropertyInfo.VECTOR_CLASS;
                __info.setValue(attrVals);
                __soapReq.addProperty(__info);
                return __envelope;
            }
            
            @Override
            public java.lang.Object ProcessResult(RIPExtendedSoapSerializationEnvelope __envelope,java.lang.Object __result)throws java.lang.Exception {
                SoapObject __soap=(SoapObject)__result;
                java.lang.Object obj = __soap.getProperty("getDependentAttrControlsReturn");
                if (obj != null && obj.getClass().equals(SoapPrimitive.class))
                {
                    SoapPrimitive j =(SoapPrimitive) obj;
                    return j.toString();
                }
                else if (obj!= null && obj instanceof String){
                    return (String)obj;
                }
                return null;
            }
        },"");
    }
    
    public android.os.AsyncTask< Void, Void, RIPOperationResult< String>> getDependentAttrControlsAsync(final Integer sid,final String handle,final RIPArrayOfString attrVals)
    {
        return executeAsync(new RIPFunctions.IFunc< String>() {
            public String Func() throws java.lang.Exception {
                return getDependentAttrControls( sid,handle,attrVals);
            }
        });
    }
    
    public Integer login(final String username,final String password ) throws java.lang.Exception
    {
        return (Integer)execute(new RIPIWcfMethod()
        {
            @Override
            public RIPExtendedSoapSerializationEnvelope CreateSoapEnvelope(){
              RIPExtendedSoapSerializationEnvelope __envelope = createEnvelope();
                SoapObject __soapReq = new SoapObject("http://www.ca.com/UnicenterServicePlus/ServiceDesk", "login");
                __envelope.setOutputSoapObject(__soapReq);
                
                PropertyInfo __info=null;
                __info = new PropertyInfo();
                __info.namespace="";
                __info.name="username";
                __info.type=PropertyInfo.STRING_CLASS;
                __info.setValue(username);
                __soapReq.addProperty(__info);
                __info = new PropertyInfo();
                __info.namespace="";
                __info.name="password";
                __info.type=PropertyInfo.STRING_CLASS;
                __info.setValue(password);
                __soapReq.addProperty(__info);
                return __envelope;
            }
            
            @Override
            public java.lang.Object ProcessResult(RIPExtendedSoapSerializationEnvelope __envelope,java.lang.Object __result)throws java.lang.Exception {
                SoapObject __soap=(SoapObject)__result;
                java.lang.Object obj = __soap.getProperty("loginReturn");
                if (obj != null && obj.getClass().equals(SoapPrimitive.class))
                {
                    SoapPrimitive j =(SoapPrimitive) obj;
                    return Integer.parseInt(j.toString());
                }
                else if (obj!= null && obj instanceof Integer){
                    return (Integer)obj;
                }
                return null;
            }
        },"");
    }
    
    public android.os.AsyncTask< Void, Void, RIPOperationResult< Integer>> loginAsync(final String username,final String password)
    {
        return executeAsync(new RIPFunctions.IFunc< Integer>() {
            public Integer Func() throws java.lang.Exception {
                return login( username,password);
            }
        });
    }
    
    public Integer loginService(final String username,final String password,final String policy ) throws java.lang.Exception
    {
        return (Integer)execute(new RIPIWcfMethod()
        {
            @Override
            public RIPExtendedSoapSerializationEnvelope CreateSoapEnvelope(){
              RIPExtendedSoapSerializationEnvelope __envelope = createEnvelope();
                SoapObject __soapReq = new SoapObject("http://www.ca.com/UnicenterServicePlus/ServiceDesk", "loginService");
                __envelope.setOutputSoapObject(__soapReq);
                
                PropertyInfo __info=null;
                __info = new PropertyInfo();
                __info.namespace="";
                __info.name="username";
                __info.type=PropertyInfo.STRING_CLASS;
                __info.setValue(username);
                __soapReq.addProperty(__info);
                __info = new PropertyInfo();
                __info.namespace="";
                __info.name="password";
                __info.type=PropertyInfo.STRING_CLASS;
                __info.setValue(password);
                __soapReq.addProperty(__info);
                __info = new PropertyInfo();
                __info.namespace="";
                __info.name="policy";
                __info.type=PropertyInfo.STRING_CLASS;
                __info.setValue(policy);
                __soapReq.addProperty(__info);
                return __envelope;
            }
            
            @Override
            public java.lang.Object ProcessResult(RIPExtendedSoapSerializationEnvelope __envelope,java.lang.Object __result)throws java.lang.Exception {
                SoapObject __soap=(SoapObject)__result;
                java.lang.Object obj = __soap.getProperty("loginServiceReturn");
                if (obj != null && obj.getClass().equals(SoapPrimitive.class))
                {
                    SoapPrimitive j =(SoapPrimitive) obj;
                    return Integer.parseInt(j.toString());
                }
                else if (obj!= null && obj instanceof Integer){
                    return (Integer)obj;
                }
                return null;
            }
        },"");
    }
    
    public android.os.AsyncTask< Void, Void, RIPOperationResult< Integer>> loginServiceAsync(final String username,final String password,final String policy)
    {
        return executeAsync(new RIPFunctions.IFunc< Integer>() {
            public Integer Func() throws java.lang.Exception {
                return loginService( username,password,policy);
            }
        });
    }
    
    public String loginServiceManaged(final String policy,final String encrypted_policy ) throws java.lang.Exception
    {
        return (String)execute(new RIPIWcfMethod()
        {
            @Override
            public RIPExtendedSoapSerializationEnvelope CreateSoapEnvelope(){
              RIPExtendedSoapSerializationEnvelope __envelope = createEnvelope();
                SoapObject __soapReq = new SoapObject("http://www.ca.com/UnicenterServicePlus/ServiceDesk", "loginServiceManaged");
                __envelope.setOutputSoapObject(__soapReq);
                
                PropertyInfo __info=null;
                __info = new PropertyInfo();
                __info.namespace="";
                __info.name="policy";
                __info.type=PropertyInfo.STRING_CLASS;
                __info.setValue(policy);
                __soapReq.addProperty(__info);
                __info = new PropertyInfo();
                __info.namespace="";
                __info.name="encrypted_policy";
                __info.type=PropertyInfo.STRING_CLASS;
                __info.setValue(encrypted_policy);
                __soapReq.addProperty(__info);
                return __envelope;
            }
            
            @Override
            public java.lang.Object ProcessResult(RIPExtendedSoapSerializationEnvelope __envelope,java.lang.Object __result)throws java.lang.Exception {
                SoapObject __soap=(SoapObject)__result;
                java.lang.Object obj = __soap.getProperty("loginServiceManagedReturn");
                if (obj != null && obj.getClass().equals(SoapPrimitive.class))
                {
                    SoapPrimitive j =(SoapPrimitive) obj;
                    return j.toString();
                }
                else if (obj!= null && obj instanceof String){
                    return (String)obj;
                }
                return null;
            }
        },"");
    }
    
    public android.os.AsyncTask< Void, Void, RIPOperationResult< String>> loginServiceManagedAsync(final String policy,final String encrypted_policy)
    {
        return executeAsync(new RIPFunctions.IFunc< String>() {
            public String Func() throws java.lang.Exception {
                return loginServiceManaged( policy,encrypted_policy);
            }
        });
    }
    
    public String loginWithArtifact(final String userid,final String artifact ) throws java.lang.Exception
    {
/*This feature is available in Premium account, Check http://EasyWsdl.com/Payment/PremiumAccountDetails to see all benefits of Premium account*/
        return null;    
    }
    
    public android.os.AsyncTask< Void, Void, RIPOperationResult< String>> loginWithArtifactAsync(final String userid,final String artifact)
    {
        return executeAsync(new RIPFunctions.IFunc< String>() {
            public String Func() throws java.lang.Exception {
                return loginWithArtifact( userid,artifact);
            }
        });
    }
    
    public String impersonate(final String sid,final String userid ) throws java.lang.Exception
    {
/*This feature is available in Premium account, Check http://EasyWsdl.com/Payment/PremiumAccountDetails to see all benefits of Premium account*/
        return null;    
    }
    
    public android.os.AsyncTask< Void, Void, RIPOperationResult< String>> impersonateAsync(final String sid,final String userid)
    {
        return executeAsync(new RIPFunctions.IFunc< String>() {
            public String Func() throws java.lang.Exception {
                return impersonate( sid,userid);
            }
        });
    }
    
    public void logout(final String sid ) throws java.lang.Exception
    {
/*This feature is available in Premium account, Check http://EasyWsdl.com/Payment/PremiumAccountDetails to see all benefits of Premium account*/
    }
    
    public android.os.AsyncTask< Void, Void, RIPOperationResult< Void>> logoutAsync(final String sid)
    {
        return executeAsync(new RIPFunctions.IFunc< Void>()
        {
            @Override
            public Void Func() throws java.lang.Exception {
                logout( sid);
                return null;
            }
        }) ;
    }
    
    public String notifyContacts(final String sid,final String creator,final String contextObject,final String messageTitle,final String messageBody,final String notifyLevel,final String notifyees,final String _internal ) throws java.lang.Exception
    {
/*This feature is available in Premium account, Check http://EasyWsdl.com/Payment/PremiumAccountDetails to see all benefits of Premium account*/
        return null;    
    }
    
    public android.os.AsyncTask< Void, Void, RIPOperationResult< String>> notifyContactsAsync(final String sid,final String creator,final String contextObject,final String messageTitle,final String messageBody,final String notifyLevel,final String notifyees,final String _internal)
    {
        return executeAsync(new RIPFunctions.IFunc< String>() {
            public String Func() throws java.lang.Exception {
                return notifyContacts( sid,creator,contextObject,messageTitle,messageBody,notifyLevel,notifyees,_internal);
            }
        });
    }
    
    public void removeLrelRelationships(final String sid,final String contextObject,final String lrelName,final String removeObjectHandles ) throws java.lang.Exception
    {
/*This feature is available in Premium account, Check http://EasyWsdl.com/Payment/PremiumAccountDetails to see all benefits of Premium account*/
    }
    
    public android.os.AsyncTask< Void, Void, RIPOperationResult< Void>> removeLrelRelationshipsAsync(final String sid,final String contextObject,final String lrelName,final String removeObjectHandles)
    {
        return executeAsync(new RIPFunctions.IFunc< Void>()
        {
            @Override
            public Void Func() throws java.lang.Exception {
                removeLrelRelationships( sid,contextObject,lrelName,removeObjectHandles);
                return null;
            }
        }) ;
    }
    
    public void removeMemberFromGroup(final String sid,final String contactHandle,final String groupHandle ) throws java.lang.Exception
    {
/*This feature is available in Premium account, Check http://EasyWsdl.com/Payment/PremiumAccountDetails to see all benefits of Premium account*/
    }
    
    public android.os.AsyncTask< Void, Void, RIPOperationResult< Void>> removeMemberFromGroupAsync(final String sid,final String contactHandle,final String groupHandle)
    {
        return executeAsync(new RIPFunctions.IFunc< Void>()
        {
            @Override
            public Void Func() throws java.lang.Exception {
                removeMemberFromGroup( sid,contactHandle,groupHandle);
                return null;
            }
        }) ;
    }
    
    public String serverStatus(final String sid ) throws java.lang.Exception
    {
/*This feature is available in Premium account, Check http://EasyWsdl.com/Payment/PremiumAccountDetails to see all benefits of Premium account*/
        return null;    
    }
    
    public android.os.AsyncTask< Void, Void, RIPOperationResult< String>> serverStatusAsync(final String sid)
    {
        return executeAsync(new RIPFunctions.IFunc< String>() {
            public String Func() throws java.lang.Exception {
                return serverStatus( sid);
            }
        });
    }
    
    public String updateObject(final String sid,final String objectHandle,final String attrVals,final String attributes ) throws java.lang.Exception
    {
/*This feature is available in Premium account, Check http://EasyWsdl.com/Payment/PremiumAccountDetails to see all benefits of Premium account*/
        return null;    
    }
    
    public android.os.AsyncTask< Void, Void, RIPOperationResult< String>> updateObjectAsync(final String sid,final String objectHandle,final String attrVals,final String attributes)
    {
        return executeAsync(new RIPFunctions.IFunc< String>() {
            public String Func() throws java.lang.Exception {
                return updateObject( sid,objectHandle,attrVals,attributes);
            }
        });
    }
    
    public String getBopsid(final String sid,final String contact ) throws java.lang.Exception
    {
/*This feature is available in Premium account, Check http://EasyWsdl.com/Payment/PremiumAccountDetails to see all benefits of Premium account*/
        return null;    
    }
    
    public android.os.AsyncTask< Void, Void, RIPOperationResult< String>> getBopsidAsync(final String sid,final String contact)
    {
        return executeAsync(new RIPFunctions.IFunc< String>() {
            public String Func() throws java.lang.Exception {
                return getBopsid( sid,contact);
            }
        });
    }
    
    public String getArtifact(final String sid,final String contact,final String passwd ) throws java.lang.Exception
    {
/*This feature is available in Premium account, Check http://EasyWsdl.com/Payment/PremiumAccountDetails to see all benefits of Premium account*/
        return null;    
    }
    
    public android.os.AsyncTask< Void, Void, RIPOperationResult< String>> getArtifactAsync(final String sid,final String contact,final String passwd)
    {
        return executeAsync(new RIPFunctions.IFunc< String>() {
            public String Func() throws java.lang.Exception {
                return getArtifact( sid,contact,passwd);
            }
        });
    }
    
    public String attachURLLinkToTicket(final String sid,final String ticketHandle,final String url,final String attmntName,final String description ) throws java.lang.Exception
    {
/*This feature is available in Premium account, Check http://EasyWsdl.com/Payment/PremiumAccountDetails to see all benefits of Premium account*/
        return null;    
    }
    
    public android.os.AsyncTask< Void, Void, RIPOperationResult< String>> attachURLLinkToTicketAsync(final String sid,final String ticketHandle,final String url,final String attmntName,final String description)
    {
        return executeAsync(new RIPFunctions.IFunc< String>() {
            public String Func() throws java.lang.Exception {
                return attachURLLinkToTicket( sid,ticketHandle,url,attmntName,description);
            }
        });
    }
    
    public String createAttmnt(final String sid,final String repositoryHandle,final String folderId,final String objectHandle,final String description,final String fileName ) throws java.lang.Exception
    {
/*This feature is available in Premium account, Check http://EasyWsdl.com/Payment/PremiumAccountDetails to see all benefits of Premium account*/
        return null;    
    }
    
    public android.os.AsyncTask< Void, Void, RIPOperationResult< String>> createAttmntAsync(final String sid,final String repositoryHandle,final String folderId,final String objectHandle,final String description,final String fileName)
    {
        return executeAsync(new RIPFunctions.IFunc< String>() {
            public String Func() throws java.lang.Exception {
                return createAttmnt( sid,repositoryHandle,folderId,objectHandle,description,fileName);
            }
        });
    }
    
    public String getDocumentsByIDs(final String sid,final String docIds,final String propertyList,final String sortBy,final String descending ) throws java.lang.Exception
    {
/*This feature is available in Premium account, Check http://EasyWsdl.com/Payment/PremiumAccountDetails to see all benefits of Premium account*/
        return null;    
    }
    
    public android.os.AsyncTask< Void, Void, RIPOperationResult< String>> getDocumentsByIDsAsync(final String sid,final String docIds,final String propertyList,final String sortBy,final String descending)
    {
        return executeAsync(new RIPFunctions.IFunc< String>() {
            public String Func() throws java.lang.Exception {
                return getDocumentsByIDs( sid,docIds,propertyList,sortBy,descending);
            }
        });
    }
    
    public String getDecisionTrees(final String sid,final String propertyList,final String sortBy,final String descending ) throws java.lang.Exception
    {
/*This feature is available in Premium account, Check http://EasyWsdl.com/Payment/PremiumAccountDetails to see all benefits of Premium account*/
        return null;    
    }
    
    public android.os.AsyncTask< Void, Void, RIPOperationResult< String>> getDecisionTreesAsync(final String sid,final String propertyList,final String sortBy,final String descending)
    {
        return executeAsync(new RIPFunctions.IFunc< String>() {
            public String Func() throws java.lang.Exception {
                return getDecisionTrees( sid,propertyList,sortBy,descending);
            }
        });
    }
    
    public String deleteDocument(final String sid,final String docId ) throws java.lang.Exception
    {
/*This feature is available in Premium account, Check http://EasyWsdl.com/Payment/PremiumAccountDetails to see all benefits of Premium account*/
        return null;    
    }
    
    public android.os.AsyncTask< Void, Void, RIPOperationResult< String>> deleteDocumentAsync(final String sid,final String docId)
    {
        return executeAsync(new RIPFunctions.IFunc< String>() {
            public String Func() throws java.lang.Exception {
                return deleteDocument( sid,docId);
            }
        });
    }
    
    public String getCategory(final String sid,final String catId,final String getCategoryPaths ) throws java.lang.Exception
    {
/*This feature is available in Premium account, Check http://EasyWsdl.com/Payment/PremiumAccountDetails to see all benefits of Premium account*/
        return null;    
    }
    
    public android.os.AsyncTask< Void, Void, RIPOperationResult< String>> getCategoryAsync(final String sid,final String catId,final String getCategoryPaths)
    {
        return executeAsync(new RIPFunctions.IFunc< String>() {
            public String Func() throws java.lang.Exception {
                return getCategory( sid,catId,getCategoryPaths);
            }
        });
    }
    
    public String getStatuses(final String sid ) throws java.lang.Exception
    {
/*This feature is available in Premium account, Check http://EasyWsdl.com/Payment/PremiumAccountDetails to see all benefits of Premium account*/
        return null;    
    }
    
    public android.os.AsyncTask< Void, Void, RIPOperationResult< String>> getStatusesAsync(final String sid)
    {
        return executeAsync(new RIPFunctions.IFunc< String>() {
            public String Func() throws java.lang.Exception {
                return getStatuses( sid);
            }
        });
    }
    
    public String getBookmarks(final String sid,final String contactId ) throws java.lang.Exception
    {
/*This feature is available in Premium account, Check http://EasyWsdl.com/Payment/PremiumAccountDetails to see all benefits of Premium account*/
        return null;    
    }
    
    public android.os.AsyncTask< Void, Void, RIPOperationResult< String>> getBookmarksAsync(final String sid,final String contactId)
    {
        return executeAsync(new RIPFunctions.IFunc< String>() {
            public String Func() throws java.lang.Exception {
                return getBookmarks( sid,contactId);
            }
        });
    }
    
    public String getQuestionsAsked(final String sid,final String resultSize,final String descending ) throws java.lang.Exception
    {
/*This feature is available in Premium account, Check http://EasyWsdl.com/Payment/PremiumAccountDetails to see all benefits of Premium account*/
        return null;    
    }
    
    public android.os.AsyncTask< Void, Void, RIPOperationResult< String>> getQuestionsAskedAsync(final String sid,final String resultSize,final String descending)
    {
        return executeAsync(new RIPFunctions.IFunc< String>() {
            public String Func() throws java.lang.Exception {
                return getQuestionsAsked( sid,resultSize,descending);
            }
        });
    }
    
    public String getPriorities(final String sid ) throws java.lang.Exception
    {
/*This feature is available in Premium account, Check http://EasyWsdl.com/Payment/PremiumAccountDetails to see all benefits of Premium account*/
        return null;    
    }
    
    public android.os.AsyncTask< Void, Void, RIPOperationResult< String>> getPrioritiesAsync(final String sid)
    {
        return executeAsync(new RIPFunctions.IFunc< String>() {
            public String Func() throws java.lang.Exception {
                return getPriorities( sid);
            }
        });
    }
    
    public String getDocumentTypes(final String sid ) throws java.lang.Exception
    {
/*This feature is available in Premium account, Check http://EasyWsdl.com/Payment/PremiumAccountDetails to see all benefits of Premium account*/
        return null;    
    }
    
    public android.os.AsyncTask< Void, Void, RIPOperationResult< String>> getDocumentTypesAsync(final String sid)
    {
        return executeAsync(new RIPFunctions.IFunc< String>() {
            public String Func() throws java.lang.Exception {
                return getDocumentTypes( sid);
            }
        });
    }
    
    public String getTemplateList(final String sid ) throws java.lang.Exception
    {
/*This feature is available in Premium account, Check http://EasyWsdl.com/Payment/PremiumAccountDetails to see all benefits of Premium account*/
        return null;    
    }
    
    public android.os.AsyncTask< Void, Void, RIPOperationResult< String>> getTemplateListAsync(final String sid)
    {
        return executeAsync(new RIPFunctions.IFunc< String>() {
            public String Func() throws java.lang.Exception {
                return getTemplateList( sid);
            }
        });
    }
    
    public String getWorkflowTemplateList(final String sid ) throws java.lang.Exception
    {
/*This feature is available in Premium account, Check http://EasyWsdl.com/Payment/PremiumAccountDetails to see all benefits of Premium account*/
        return null;    
    }
    
    public android.os.AsyncTask< Void, Void, RIPOperationResult< String>> getWorkflowTemplateListAsync(final String sid)
    {
        return executeAsync(new RIPFunctions.IFunc< String>() {
            public String Func() throws java.lang.Exception {
                return getWorkflowTemplateList( sid);
            }
        });
    }
    
    public String addComment(final String sid,final String comment,final String docId,final String email,final String username,final String contactId ) throws java.lang.Exception
    {
/*This feature is available in Premium account, Check http://EasyWsdl.com/Payment/PremiumAccountDetails to see all benefits of Premium account*/
        return null;    
    }
    
    public android.os.AsyncTask< Void, Void, RIPOperationResult< String>> addCommentAsync(final String sid,final String comment,final String docId,final String email,final String username,final String contactId)
    {
        return executeAsync(new RIPFunctions.IFunc< String>() {
            public String Func() throws java.lang.Exception {
                return addComment( sid,comment,docId,email,username,contactId);
            }
        });
    }
    
    public String deleteComment(final String sid,final String commentId ) throws java.lang.Exception
    {
/*This feature is available in Premium account, Check http://EasyWsdl.com/Payment/PremiumAccountDetails to see all benefits of Premium account*/
        return null;    
    }
    
    public android.os.AsyncTask< Void, Void, RIPOperationResult< String>> deleteCommentAsync(final String sid,final String commentId)
    {
        return executeAsync(new RIPFunctions.IFunc< String>() {
            public String Func() throws java.lang.Exception {
                return deleteComment( sid,commentId);
            }
        });
    }
    
    public String createDocument(final String sid,final String kdAttributes ) throws java.lang.Exception
    {
/*This feature is available in Premium account, Check http://EasyWsdl.com/Payment/PremiumAccountDetails to see all benefits of Premium account*/
        return null;    
    }
    
    public android.os.AsyncTask< Void, Void, RIPOperationResult< String>> createDocumentAsync(final String sid,final String kdAttributes)
    {
        return executeAsync(new RIPFunctions.IFunc< String>() {
            public String Func() throws java.lang.Exception {
                return createDocument( sid,kdAttributes);
            }
        });
    }
    
    public String modifyDocument(final String sid,final String docId,final String kdAttributes ) throws java.lang.Exception
    {
/*This feature is available in Premium account, Check http://EasyWsdl.com/Payment/PremiumAccountDetails to see all benefits of Premium account*/
        return null;    
    }
    
    public android.os.AsyncTask< Void, Void, RIPOperationResult< String>> modifyDocumentAsync(final String sid,final String docId,final String kdAttributes)
    {
        return executeAsync(new RIPFunctions.IFunc< String>() {
            public String Func() throws java.lang.Exception {
                return modifyDocument( sid,docId,kdAttributes);
            }
        });
    }
    
    public String rateDocument(final String sid,final String docId,final String rating,final String multiplier,final String ticketPerId,final String onTicketAccept,final String solveUserProblem,final String isDefault ) throws java.lang.Exception
    {
/*This feature is available in Premium account, Check http://EasyWsdl.com/Payment/PremiumAccountDetails to see all benefits of Premium account*/
        return null;    
    }
    
    public android.os.AsyncTask< Void, Void, RIPOperationResult< String>> rateDocumentAsync(final String sid,final String docId,final String rating,final String multiplier,final String ticketPerId,final String onTicketAccept,final String solveUserProblem,final String isDefault)
    {
        return executeAsync(new RIPFunctions.IFunc< String>() {
            public String Func() throws java.lang.Exception {
                return rateDocument( sid,docId,rating,multiplier,ticketPerId,onTicketAccept,solveUserProblem,isDefault);
            }
        });
    }
    
    public String getComments(final String sid,final String docIds ) throws java.lang.Exception
    {
/*This feature is available in Premium account, Check http://EasyWsdl.com/Payment/PremiumAccountDetails to see all benefits of Premium account*/
        return null;    
    }
    
    public android.os.AsyncTask< Void, Void, RIPOperationResult< String>> getCommentsAsync(final String sid,final String docIds)
    {
        return executeAsync(new RIPFunctions.IFunc< String>() {
            public String Func() throws java.lang.Exception {
                return getComments( sid,docIds);
            }
        });
    }
    
    public String findContacts(final String sid,final String userName,final String lastName,final String firstName,final String email,final String accessType,final String inactiveFlag ) throws java.lang.Exception
    {
/*This feature is available in Premium account, Check http://EasyWsdl.com/Payment/PremiumAccountDetails to see all benefits of Premium account*/
        return null;    
    }
    
    public android.os.AsyncTask< Void, Void, RIPOperationResult< String>> findContactsAsync(final String sid,final String userName,final String lastName,final String firstName,final String email,final String accessType,final String inactiveFlag)
    {
        return executeAsync(new RIPFunctions.IFunc< String>() {
            public String Func() throws java.lang.Exception {
                return findContacts( sid,userName,lastName,firstName,email,accessType,inactiveFlag);
            }
        });
    }
    
    public String getPermissionGroups(final String sid,final String groupId ) throws java.lang.Exception
    {
/*This feature is available in Premium account, Check http://EasyWsdl.com/Payment/PremiumAccountDetails to see all benefits of Premium account*/
        return null;    
    }
    
    public android.os.AsyncTask< Void, Void, RIPOperationResult< String>> getPermissionGroupsAsync(final String sid,final String groupId)
    {
        return executeAsync(new RIPFunctions.IFunc< String>() {
            public String Func() throws java.lang.Exception {
                return getPermissionGroups( sid,groupId);
            }
        });
    }
    
    public String getContact(final String sid,final String contactId ) throws java.lang.Exception
    {
/*This feature is available in Premium account, Check http://EasyWsdl.com/Payment/PremiumAccountDetails to see all benefits of Premium account*/
        return null;    
    }
    
    public android.os.AsyncTask< Void, Void, RIPOperationResult< String>> getContactAsync(final String sid,final String contactId)
    {
        return executeAsync(new RIPFunctions.IFunc< String>() {
            public String Func() throws java.lang.Exception {
                return getContact( sid,contactId);
            }
        });
    }
    
    public String addBookmark(final String sid,final String contactId,final String docId ) throws java.lang.Exception
    {
/*This feature is available in Premium account, Check http://EasyWsdl.com/Payment/PremiumAccountDetails to see all benefits of Premium account*/
        return null;    
    }
    
    public android.os.AsyncTask< Void, Void, RIPOperationResult< String>> addBookmarkAsync(final String sid,final String contactId,final String docId)
    {
        return executeAsync(new RIPFunctions.IFunc< String>() {
            public String Func() throws java.lang.Exception {
                return addBookmark( sid,contactId,docId);
            }
        });
    }
    
    public String updateRating(final String sid,final String buId,final String rate ) throws java.lang.Exception
    {
/*This feature is available in Premium account, Check http://EasyWsdl.com/Payment/PremiumAccountDetails to see all benefits of Premium account*/
        return null;    
    }
    
    public android.os.AsyncTask< Void, Void, RIPOperationResult< String>> updateRatingAsync(final String sid,final String buId,final String rate)
    {
        return executeAsync(new RIPFunctions.IFunc< String>() {
            public String Func() throws java.lang.Exception {
                return updateRating( sid,buId,rate);
            }
        });
    }
    
    public String doSelectKD(final String sid,final String whereClause,final String sortBy,final String desc,final String maxRows,final String attributes,final String skip ) throws java.lang.Exception
    {
/*This feature is available in Premium account, Check http://EasyWsdl.com/Payment/PremiumAccountDetails to see all benefits of Premium account*/
        return null;    
    }
    
    public android.os.AsyncTask< Void, Void, RIPOperationResult< String>> doSelectKDAsync(final String sid,final String whereClause,final String sortBy,final String desc,final String maxRows,final String attributes,final String skip)
    {
        return executeAsync(new RIPFunctions.IFunc< String>() {
            public String Func() throws java.lang.Exception {
                return doSelectKD( sid,whereClause,sortBy,desc,maxRows,attributes,skip);
            }
        });
    }
    
    public String getFolderList(final String sid,final String parentFolderId,final String repId ) throws java.lang.Exception
    {
/*This feature is available in Premium account, Check http://EasyWsdl.com/Payment/PremiumAccountDetails to see all benefits of Premium account*/
        return null;    
    }
    
    public android.os.AsyncTask< Void, Void, RIPOperationResult< String>> getFolderListAsync(final String sid,final String parentFolderId,final String repId)
    {
        return executeAsync(new RIPFunctions.IFunc< String>() {
            public String Func() throws java.lang.Exception {
                return getFolderList( sid,parentFolderId,repId);
            }
        });
    }
    
    public String getFolderInfo(final String sid,final String folderId ) throws java.lang.Exception
    {
/*This feature is available in Premium account, Check http://EasyWsdl.com/Payment/PremiumAccountDetails to see all benefits of Premium account*/
        return null;    
    }
    
    public android.os.AsyncTask< Void, Void, RIPOperationResult< String>> getFolderInfoAsync(final String sid,final String folderId)
    {
        return executeAsync(new RIPFunctions.IFunc< String>() {
            public String Func() throws java.lang.Exception {
                return getFolderInfo( sid,folderId);
            }
        });
    }
    
    public String getAttmntList(final String sid,final String folderId,final String repId ) throws java.lang.Exception
    {
/*This feature is available in Premium account, Check http://EasyWsdl.com/Payment/PremiumAccountDetails to see all benefits of Premium account*/
        return null;    
    }
    
    public android.os.AsyncTask< Void, Void, RIPOperationResult< String>> getAttmntListAsync(final String sid,final String folderId,final String repId)
    {
        return executeAsync(new RIPFunctions.IFunc< String>() {
            public String Func() throws java.lang.Exception {
                return getAttmntList( sid,folderId,repId);
            }
        });
    }
    
    public String getAttmntInfo(final String sid,final String attmntId ) throws java.lang.Exception
    {
/*This feature is available in Premium account, Check http://EasyWsdl.com/Payment/PremiumAccountDetails to see all benefits of Premium account*/
        return null;    
    }
    
    public android.os.AsyncTask< Void, Void, RIPOperationResult< String>> getAttmntInfoAsync(final String sid,final String attmntId)
    {
        return executeAsync(new RIPFunctions.IFunc< String>() {
            public String Func() throws java.lang.Exception {
                return getAttmntInfo( sid,attmntId);
            }
        });
    }
    
    public String getRepositoryInfo(final String sid,final String repositoryId ) throws java.lang.Exception
    {
/*This feature is available in Premium account, Check http://EasyWsdl.com/Payment/PremiumAccountDetails to see all benefits of Premium account*/
        return null;    
    }
    
    public android.os.AsyncTask< Void, Void, RIPOperationResult< String>> getRepositoryInfoAsync(final String sid,final String repositoryId)
    {
        return executeAsync(new RIPFunctions.IFunc< String>() {
            public String Func() throws java.lang.Exception {
                return getRepositoryInfo( sid,repositoryId);
            }
        });
    }
    
    public String createFolder(final String sid,final String parentFolderId,final String repId,final String folderType,final String description,final String folderName ) throws java.lang.Exception
    {
/*This feature is available in Premium account, Check http://EasyWsdl.com/Payment/PremiumAccountDetails to see all benefits of Premium account*/
        return null;    
    }
    
    public android.os.AsyncTask< Void, Void, RIPOperationResult< String>> createFolderAsync(final String sid,final String parentFolderId,final String repId,final String folderType,final String description,final String folderName)
    {
        return executeAsync(new RIPFunctions.IFunc< String>() {
            public String Func() throws java.lang.Exception {
                return createFolder( sid,parentFolderId,repId,folderType,description,folderName);
            }
        });
    }
    
    public String faq(final String sid,final String categoryIds,final String resultSize,final String propertyList,final String sortBy,final String descending,final String whereClause,final String maxDocIDs ) throws java.lang.Exception
    {
/*This feature is available in Premium account, Check http://EasyWsdl.com/Payment/PremiumAccountDetails to see all benefits of Premium account*/
        return null;    
    }
    
    public android.os.AsyncTask< Void, Void, RIPOperationResult< String>> faqAsync(final String sid,final String categoryIds,final String resultSize,final String propertyList,final String sortBy,final String descending,final String whereClause,final String maxDocIDs)
    {
        return executeAsync(new RIPFunctions.IFunc< String>() {
            public String Func() throws java.lang.Exception {
                return faq( sid,categoryIds,resultSize,propertyList,sortBy,descending,whereClause,maxDocIDs);
            }
        });
    }
    
    public String attmntFolderLinkCount(final String sid,final String folderId ) throws java.lang.Exception
    {
/*This feature is available in Premium account, Check http://EasyWsdl.com/Payment/PremiumAccountDetails to see all benefits of Premium account*/
        return null;    
    }
    
    public android.os.AsyncTask< Void, Void, RIPOperationResult< String>> attmntFolderLinkCountAsync(final String sid,final String folderId)
    {
        return executeAsync(new RIPFunctions.IFunc< String>() {
            public String Func() throws java.lang.Exception {
                return attmntFolderLinkCount( sid,folderId);
            }
        });
    }
    
    public String attachURLLink(final String sid,final String docId,final String url,final String attmntName,final String description ) throws java.lang.Exception
    {
/*This feature is available in Premium account, Check http://EasyWsdl.com/Payment/PremiumAccountDetails to see all benefits of Premium account*/
        return null;    
    }
    
    public android.os.AsyncTask< Void, Void, RIPOperationResult< String>> attachURLLinkAsync(final String sid,final String docId,final String url,final String attmntName,final String description)
    {
        return executeAsync(new RIPFunctions.IFunc< String>() {
            public String Func() throws java.lang.Exception {
                return attachURLLink( sid,docId,url,attmntName,description);
            }
        });
    }
    
    public String deleteBookmark(final String sid,final String contactId,final String docId ) throws java.lang.Exception
    {
/*This feature is available in Premium account, Check http://EasyWsdl.com/Payment/PremiumAccountDetails to see all benefits of Premium account*/
        return null;    
    }
    
    public android.os.AsyncTask< Void, Void, RIPOperationResult< String>> deleteBookmarkAsync(final String sid,final String contactId,final String docId)
    {
        return executeAsync(new RIPFunctions.IFunc< String>() {
            public String Func() throws java.lang.Exception {
                return deleteBookmark( sid,contactId,docId);
            }
        });
    }
    
    public String getKDListPerAttmnt(final String sid,final String attmntId ) throws java.lang.Exception
    {
/*This feature is available in Premium account, Check http://EasyWsdl.com/Payment/PremiumAccountDetails to see all benefits of Premium account*/
        return null;    
    }
    
    public android.os.AsyncTask< Void, Void, RIPOperationResult< String>> getKDListPerAttmntAsync(final String sid,final String attmntId)
    {
        return executeAsync(new RIPFunctions.IFunc< String>() {
            public String Func() throws java.lang.Exception {
                return getKDListPerAttmnt( sid,attmntId);
            }
        });
    }
    
    public String getAttmntListPerKD(final String sid,final String docId ) throws java.lang.Exception
    {
/*This feature is available in Premium account, Check http://EasyWsdl.com/Payment/PremiumAccountDetails to see all benefits of Premium account*/
        return null;    
    }
    
    public android.os.AsyncTask< Void, Void, RIPOperationResult< String>> getAttmntListPerKDAsync(final String sid,final String docId)
    {
        return executeAsync(new RIPFunctions.IFunc< String>() {
            public String Func() throws java.lang.Exception {
                return getAttmntListPerKD( sid,docId);
            }
        });
    }
    
    public String isAttmntLinkedKD(final String sid,final String attmntId ) throws java.lang.Exception
    {
/*This feature is available in Premium account, Check http://EasyWsdl.com/Payment/PremiumAccountDetails to see all benefits of Premium account*/
        return null;    
    }
    
    public android.os.AsyncTask< Void, Void, RIPOperationResult< String>> isAttmntLinkedKDAsync(final String sid,final String attmntId)
    {
        return executeAsync(new RIPFunctions.IFunc< String>() {
            public String Func() throws java.lang.Exception {
                return isAttmntLinkedKD( sid,attmntId);
            }
        });
    }
    
    public String transfer(final String sid,final String creator,final String objectHandle,final String description,final String setAssignee,final String newAssigneeHandle,final String setGroup,final String newGroupHandle,final String setOrganization,final String newOrganizationHandle ) throws java.lang.Exception
    {
/*This feature is available in Premium account, Check http://EasyWsdl.com/Payment/PremiumAccountDetails to see all benefits of Premium account*/
        return null;    
    }
    
    public android.os.AsyncTask< Void, Void, RIPOperationResult< String>> transferAsync(final String sid,final String creator,final String objectHandle,final String description,final String setAssignee,final String newAssigneeHandle,final String setGroup,final String newGroupHandle,final String setOrganization,final String newOrganizationHandle)
    {
        return executeAsync(new RIPFunctions.IFunc< String>() {
            public String Func() throws java.lang.Exception {
                return transfer( sid,creator,objectHandle,description,setAssignee,newAssigneeHandle,setGroup,newGroupHandle,setOrganization,newOrganizationHandle);
            }
        });
    }
    
    public String search(final String sid,final String problem,final String resultSize,final String properties,final String sortBy,final String descending,final String relatedCategories,final String searchType,final String matchType,final String searchField,final String categoryPath,final String whereClause,final String maxDocIDs ) throws java.lang.Exception
    {
/*This feature is available in Premium account, Check http://EasyWsdl.com/Payment/PremiumAccountDetails to see all benefits of Premium account*/
        return null;    
    }
    
    public android.os.AsyncTask< Void, Void, RIPOperationResult< String>> searchAsync(final String sid,final String problem,final String resultSize,final String properties,final String sortBy,final String descending,final String relatedCategories,final String searchType,final String matchType,final String searchField,final String categoryPath,final String whereClause,final String maxDocIDs)
    {
        return executeAsync(new RIPFunctions.IFunc< String>() {
            public String Func() throws java.lang.Exception {
                return search( sid,problem,resultSize,properties,sortBy,descending,relatedCategories,searchType,matchType,searchField,categoryPath,whereClause,maxDocIDs);
            }
        });
    }
    
    public String getDocument(final String sid,final String docId,final String propertyList,final String relatedDoc,final String getAttmnt,final String getHistory,final String getComment,final String getNotiList ) throws java.lang.Exception
    {
/*This feature is available in Premium account, Check http://EasyWsdl.com/Payment/PremiumAccountDetails to see all benefits of Premium account*/
        return null;    
    }
    
    public android.os.AsyncTask< Void, Void, RIPOperationResult< String>> getDocumentAsync(final String sid,final String docId,final String propertyList,final String relatedDoc,final String getAttmnt,final String getHistory,final String getComment,final String getNotiList)
    {
        return executeAsync(new RIPFunctions.IFunc< String>() {
            public String Func() throws java.lang.Exception {
                return getDocument( sid,docId,propertyList,relatedDoc,getAttmnt,getHistory,getComment,getNotiList);
            }
        });
    }

    
    protected java.lang.Object execute(RIPIWcfMethod wcfMethod,String methodName) throws java.lang.Exception
    {
        org.ksoap2.transport.Transport __httpTransport=createTransport();
        __httpTransport.debug=enableLogging;
        RIPExtendedSoapSerializationEnvelope __envelope=wcfMethod.CreateSoapEnvelope();
        try
        {
            sendRequest(methodName, __envelope, __httpTransport);
            
        }
        finally {
            if (__httpTransport.debug) {
                if (__httpTransport.requestDump != null) {
                    android.util.Log.i("requestDump",__httpTransport.requestDump);    
                    
                }
                if (__httpTransport.responseDump != null) {
                    android.util.Log.i("responseDump",__httpTransport.responseDump);
                }
            }
        }
        java.lang.Object __retObj = __envelope.bodyIn;
        if (__retObj instanceof org.ksoap2.SoapFault){
            org.ksoap2.SoapFault __fault = (org.ksoap2.SoapFault)__retObj;
            throw convertToException(__fault,__envelope);
        }else{
            return wcfMethod.ProcessResult(__envelope,__retObj);
        }
    }
    
    protected < T> android.os.AsyncTask< Void, Void, RIPOperationResult< T>>  executeAsync(final RIPFunctions.IFunc< T> func)
    {
        return new android.os.AsyncTask< Void, Void, RIPOperationResult< T>>()
        {
            @Override
            protected void onPreExecute() {
                callback.Starting();
            };
            @Override
            protected RIPOperationResult< T> doInBackground(Void... params) {
                RIPOperationResult< T> result = new RIPOperationResult< T>();
                try
                {
                    result.Result= func.Func();
                }
                catch(java.lang.Exception ex)
                {
                    ex.printStackTrace();
                    result.Exception=ex;
                }
                return result;
            }
            
            @Override
            protected void onPostExecute(RIPOperationResult< T> result)
            {
                callback.Completed(result);
            }
        }.execute();
    }
        
    java.lang.Exception convertToException(org.ksoap2.SoapFault fault,RIPExtendedSoapSerializationEnvelope envelope)
    {

        return new java.lang.Exception(fault.faultstring);
    }
}


